<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JAS0NHUANG - Diary</title>
  
  <subtitle>Diary, Daily Progress and Bazzar</subtitle>
  <link href="/diary/atom.xml" rel="self"/>
  
  <link href="http://JAS0NHUANG.github.io/diary/"/>
  <updated>2020-07-08T04:55:06.159Z</updated>
  <id>http://JAS0NHUANG.github.io/diary/</id>
  
  <author>
    <name>JAS0N HUANG</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>J+16 [進度] week4作業/ 切版練習 / 寫心得</title>
    <link href="http://JAS0NHUANG.github.io/diary/J-plus-16-progress/"/>
    <id>http://JAS0NHUANG.github.io/diary/J-plus-16-progress/</id>
    <published>2020-07-08T04:55:06.000Z</published>
    <updated>2020-07-08T04:55:06.159Z</updated>
    
    <content type="html"><![CDATA[<h2 id="昨日小記"><a href="#昨日小記" class="headerlink" title="昨日小記"></a>昨日小記</h2><h3 id="week4-作業"><a href="#week4-作業" class="headerlink" title="week4 作業"></a>week4 作業</h3><p>作業差不多完成了，挑戰題剩下 Delete 的功能加上去，然後可能要重新把程式碼整理一遍，不然內容有點混亂。</p><h3 id="HTML-CSS"><a href="#HTML-CSS" class="headerlink" title="HTML / CSS"></a>HTML / CSS</h3><p>昨天把 week6 的作業拿出來亂切一通，感覺很多 HTML/CSS 的細節都還不熟練，多練習應該就會慢慢上手了吧！</p><hr><h2 id="今日進度"><a href="#今日進度" class="headerlink" title="今日進度"></a>今日進度</h2><h3 id="完成-Week4-作業"><a href="#完成-Week4-作業" class="headerlink" title="完成 Week4 作業"></a>完成 Week4 作業</h3><ul><li><input checked="" disabled="" type="checkbox"> 完成 Week4 作業<br>把 Week4 作業寫完，然後就是最後檢查跟整理程式碼。</li></ul><h3 id="每天看一點-JavaScript"><a href="#每天看一點-JavaScript" class="headerlink" title="每天看一點 JavaScript"></a>每天看一點 JavaScript</h3><ul><li><input disabled="" type="checkbox"> 每天看一點 JavaScript<br>[JS101] 練習 Lv2 與 Lv3。昨天看了一點點，今天繼續。</li></ul><h3 id="寫心得、筆記"><a href="#寫心得、筆記" class="headerlink" title="寫心得、筆記"></a>寫心得、筆記</h3><ul><li><input checked="" disabled="" type="checkbox"> 寫心得寫心得寫心得寫心得寫心得寫心得寫心得<br>好像應該真的靜下心來把半個月以來的心得寫一寫了。</li></ul><h3 id="練習切個版"><a href="#練習切個版" class="headerlink" title="練習切個版"></a>練習切個版</h3><ul><li><input checked="" disabled="" type="checkbox"> 練習切版<br>用 week6 作業練習切版</li></ul><hr><h2 id="明日進度"><a href="#明日進度" class="headerlink" title="明日進度"></a>明日進度</h2><h3 id="每天看一點-JavaScript-1"><a href="#每天看一點-JavaScript-1" class="headerlink" title="每天看一點 JavaScript"></a>每天看一點 JavaScript</h3><ul><li><input disabled="" type="checkbox"> 每天看一點 JavaScript</li></ul><h3 id="交-Week4-作業"><a href="#交-Week4-作業" class="headerlink" title="交 Week4 作業"></a>交 Week4 作業</h3><ul><li><input disabled="" type="checkbox"> 交 Week4 作業</li></ul><h3 id="寫心得、筆記-1"><a href="#寫心得、筆記-1" class="headerlink" title="寫心得、筆記"></a>寫心得、筆記</h3><ul><li><input disabled="" type="checkbox"> 寫心得<br>程式導師計畫半個月心得。</li></ul><h3 id="練習切個版-1"><a href="#練習切個版-1" class="headerlink" title="練習切個版"></a>練習切個版</h3><ul><li><input disabled="" type="checkbox"> 練習切版<br>用 week6 作業練習切版</li></ul><hr><h2 id="計畫"><a href="#計畫" class="headerlink" title="計畫"></a>計畫</h2><h3 id="背包問題解題筆記"><a href="#背包問題解題筆記" class="headerlink" title="背包問題解題筆記"></a>背包問題解題筆記</h3><ul><li><input disabled="" type="checkbox"> 把背包問題解題的過程記錄下來</li></ul><h3 id="視覺化-HTML-CSS-小抄"><a href="#視覺化-HTML-CSS-小抄" class="headerlink" title="視覺化 HTML / CSS 小抄"></a>視覺化 HTML / CSS 小抄</h3><ul><li><input disabled="" type="checkbox"> 視覺化 HTML / CSS 小抄</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;昨日小記&quot;&gt;&lt;a href=&quot;#昨日小記&quot; class=&quot;headerlink&quot; title=&quot;昨日小記&quot;&gt;&lt;/a&gt;昨日小記&lt;/h2&gt;&lt;h3 id=&quot;week4-作業&quot;&gt;&lt;a href=&quot;#week4-作業&quot; class=&quot;headerlink&quot; title=&quot;w
      
    
    </summary>
    
    
      <category term="每日進度" scheme="http://JAS0NHUANG.github.io/diary/tags/%E6%AF%8F%E6%97%A5%E9%80%B2%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>J+15 [進度] 加強 JavaScript / week4 作業 / 吃粽子</title>
    <link href="http://JAS0NHUANG.github.io/diary/J-plus-15-progress/"/>
    <id>http://JAS0NHUANG.github.io/diary/J-plus-15-progress/</id>
    <published>2020-07-08T04:52:50.000Z</published>
    <updated>2020-07-08T04:52:50.754Z</updated>
    
    <content type="html"><![CDATA[<h2 id="昨日小記"><a href="#昨日小記" class="headerlink" title="昨日小記"></a>昨日小記</h2><h3 id="寫-week4-作業"><a href="#寫-week4-作業" class="headerlink" title="寫 week4 作業"></a>寫 week4 作業</h3><p>繼續整理 week4 作業，把串接 New Twitch API 的方法搞清楚，重新寫一次挑戰題，然後問了助教、老師一堆問題……</p><h3 id="ALG101-複習"><a href="#ALG101-複習" class="headerlink" title="ALG101 複習"></a>ALG101 複習</h3><p>總算是複習完了，然後解了兩題  LeetCode 上面超水的水題，今天繼續解個一、兩題吧！</p><h3 id="HTML-CSS"><a href="#HTML-CSS" class="headerlink" title="HTML / CSS"></a>HTML / CSS</h3><p>昨天快速的看了一下 HTML / CSS 的內容，之後應該還要再重看一些地方，然後隨便把第六週作業拿出來亂搞一通……</p><h2 id="今日進度"><a href="#今日進度" class="headerlink" title="今日進度"></a>今日進度</h2><h3 id="完成-Week4-作業"><a href="#完成-Week4-作業" class="headerlink" title="完成 Week4 作業"></a>完成 Week4 作業</h3><ul><li><input disabled="" type="checkbox"> 完成 Week4 作業<br>Week4 作業最後整理，試著用 http 套件處理 POST、DELETE……等請求。<br>MinW 助教提醒可以先不要用 Axios，會錯過一些理解 promise 為什麼一直被包裝的機會 XDDDDD</li></ul><h3 id="每天看一點-JavaScript"><a href="#每天看一點-JavaScript" class="headerlink" title="每天看一點 JavaScript"></a>每天看一點 JavaScript</h3><ul><li><input checked="" disabled="" type="checkbox"> 每天看一點 JavaScript<br>[JS101] 練習 Lv2 與 Lv3。Still too weak to LeetCode！！</li></ul><hr><h2 id="明日進度"><a href="#明日進度" class="headerlink" title="明日進度"></a>明日進度</h2><h3 id="每天看一點-JavaScript-1"><a href="#每天看一點-JavaScript-1" class="headerlink" title="每天看一點 JavaScript"></a>每天看一點 JavaScript</h3><ul><li><input disabled="" type="checkbox"> 每天看一點 JavaScript</li></ul><h3 id="Week4-作業"><a href="#Week4-作業" class="headerlink" title="Week4 作業"></a>Week4 作業</h3><ul><li><input disabled="" type="checkbox"> 繼續研究 Week4 作業</li></ul><h3 id="寫心得、筆記"><a href="#寫心得、筆記" class="headerlink" title="寫心得、筆記"></a>寫心得、筆記</h3><ul><li><input disabled="" type="checkbox"> 寫心得寫心得寫心得寫心得寫心得寫心得寫心得寫心得寫心得寫心得寫心得<br>好像應該停下來好好整理從開始參加計畫到現在半個月的心得了！</li></ul><h2 id="計畫"><a href="#計畫" class="headerlink" title="計畫"></a>計畫</h2><h3 id="背包問題解題筆記"><a href="#背包問題解題筆記" class="headerlink" title="背包問題解題筆記"></a>背包問題解題筆記</h3><ul><li><input disabled="" type="checkbox"> 把背包問題解題的過程記錄下來</li></ul><h3 id="寫參加程式導師計畫前半個月心得"><a href="#寫參加程式導師計畫前半個月心得" class="headerlink" title="寫參加程式導師計畫前半個月心得"></a>寫參加程式導師計畫前半個月心得</h3><ul><li><input disabled="" type="checkbox"> 寫參加程式導師計畫前半個月心得</li></ul><h3 id="視覺化-HTML-CSS-小抄"><a href="#視覺化-HTML-CSS-小抄" class="headerlink" title="視覺化 HTML / CSS 小抄"></a>視覺化 HTML / CSS 小抄</h3><ul><li><input disabled="" type="checkbox"> 視覺化 HTML / CSS 小抄</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;昨日小記&quot;&gt;&lt;a href=&quot;#昨日小記&quot; class=&quot;headerlink&quot; title=&quot;昨日小記&quot;&gt;&lt;/a&gt;昨日小記&lt;/h2&gt;&lt;h3 id=&quot;寫-week4-作業&quot;&gt;&lt;a href=&quot;#寫-week4-作業&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
      <category term="每日進度" scheme="http://JAS0NHUANG.github.io/diary/tags/%E6%AF%8F%E6%97%A5%E9%80%B2%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>J+14 [進度] 加強 JavaScript / week4 作業</title>
    <link href="http://JAS0NHUANG.github.io/diary/J-plus-14-progress/"/>
    <id>http://JAS0NHUANG.github.io/diary/J-plus-14-progress/</id>
    <published>2020-07-08T04:51:28.000Z</published>
    <updated>2020-07-08T04:51:28.220Z</updated>
    
    <content type="html"><![CDATA[<h2 id="昨日小記"><a href="#昨日小記" class="headerlink" title="昨日小記"></a>昨日小記</h2><h3 id="寫-week4-作業"><a href="#寫-week4-作業" class="headerlink" title="寫 week4 作業"></a>寫 week4 作業</h3><p>重新整理了 week4 的作業，把 axios 與 request 的方法各寫了一遍，看過範例之後調整自已的寫法，；也試著用內建 http 的方法寫（目前還只會用 GET 就是了）。</p><h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><p>昨天看了一些 HTML 課程的內容，細節總是記不太起來，研究了一下同學們推薦的畫畫軟體，計畫做一個視覺化的 cheat sheet，至少之後要寫的時候不用一直 Google。<br>但是目前只能畫出這個：<br><img src="https://i.imgur.com/BOuZRAh.png" alt="圖"><br>好像比原版的還……</p><h2 id="今日進度"><a href="#今日進度" class="headerlink" title="今日進度"></a>今日進度</h2><h3 id="每天看一點-JavaScript"><a href="#每天看一點-JavaScript" class="headerlink" title="每天看一點 JavaScript"></a>每天看一點 JavaScript</h3><ul><li><input checked="" disabled="" type="checkbox"> 每天看一點 JavaScript<br>[ALG101] 第九單元<br>昨天都在處理第四週作業，沒有看……，寫 week4 作業應該也能算是在練習 JavaScript 吧？！</li></ul><h3 id="寫-Week4-作業"><a href="#寫-Week4-作業" class="headerlink" title="寫 Week4 作業"></a>寫 Week4 作業</h3><ul><li><input checked="" disabled="" type="checkbox"> 寫 Week4 作業</li></ul><h3 id="開始看一點-HTML-CSS"><a href="#開始看一點-HTML-CSS" class="headerlink" title="開始看一點 HTML / CSS"></a>開始看一點 HTML / CSS</h3><ul><li><input checked="" disabled="" type="checkbox"> 開始看一點 HTML / CSS</li></ul><hr><h2 id="明日進度"><a href="#明日進度" class="headerlink" title="明日進度"></a>明日進度</h2><h3 id="完成-Week4-作業"><a href="#完成-Week4-作業" class="headerlink" title="完成 Week4 作業"></a>完成 Week4 作業</h3><ul><li><input disabled="" type="checkbox"> 完成 Week4 作業</li></ul><h3 id="每天看一點-JavaScript-1"><a href="#每天看一點-JavaScript-1" class="headerlink" title="每天看一點 JavaScript"></a>每天看一點 JavaScript</h3><ul><li><input disabled="" type="checkbox"> 每天看一點 JavaScript<br>[JS101] 練習 Lv2 與 Lv3</li></ul><h2 id="計畫"><a href="#計畫" class="headerlink" title="計畫"></a>計畫</h2><h3 id="背包問題解題筆記"><a href="#背包問題解題筆記" class="headerlink" title="背包問題解題筆記"></a>背包問題解題筆記</h3><ul><li><input disabled="" type="checkbox"> 把背包問題解題的過程記錄下來<br>這幾天看看寫不寫的出來吧……感覺好像都沒辦法開始動……</li></ul><h3 id="寫參加程式導師計畫前半個月心得"><a href="#寫參加程式導師計畫前半個月心得" class="headerlink" title="寫參加程式導師計畫前半個月心得"></a>寫參加程式導師計畫前半個月心得</h3><ul><li><input disabled="" type="checkbox"> 寫參加程式導師計畫前半個月心得<br>寫文章的速度還沒有被訓練起來，那就以半個月寫一次整體心得為目標吧。（好像寫心得才真的是最難的事情。）</li></ul><h3 id="視覺化-HTML-CSS-小抄"><a href="#視覺化-HTML-CSS-小抄" class="headerlink" title="視覺化 HTML / CSS 小抄"></a>視覺化 HTML / CSS 小抄</h3><ul><li><input disabled="" type="checkbox"> 視覺化 HTML / CSS 小抄</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;昨日小記&quot;&gt;&lt;a href=&quot;#昨日小記&quot; class=&quot;headerlink&quot; title=&quot;昨日小記&quot;&gt;&lt;/a&gt;昨日小記&lt;/h2&gt;&lt;h3 id=&quot;寫-week4-作業&quot;&gt;&lt;a href=&quot;#寫-week4-作業&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
      <category term="每日進度" scheme="http://JAS0NHUANG.github.io/diary/tags/%E6%AF%8F%E6%97%A5%E9%80%B2%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>J+13 [進度] 加強 JavaScript / 嘗試 week4 作業不同寫法</title>
    <link href="http://JAS0NHUANG.github.io/diary/J-plus-13-progress/"/>
    <id>http://JAS0NHUANG.github.io/diary/J-plus-13-progress/</id>
    <published>2020-07-08T04:49:47.000Z</published>
    <updated>2020-07-08T04:49:47.483Z</updated>
    
    <content type="html"><![CDATA[<h2 id="昨日小記"><a href="#昨日小記" class="headerlink" title="昨日小記"></a>昨日小記</h2><p>很多事都沒有照著計畫在做，不過每天都有收獲我想應該就夠了。</p><h3 id="修正-week3-作業"><a href="#修正-week3-作業" class="headerlink" title="修正 week3 作業"></a>修正 week3 作業</h3><p>把 Week3 作業裡老師提醒的部分修改一下，然後再試著每一題依照範例重新寫一次，看懂範例跟自已重頭照著那個邏輯寫一次感覺差很多，真的要多強迫自已練習，不然就會一直留在自已的壞習慣裡。</p><h3 id="Lidemy-HTTP-Challenge-心得-（下）"><a href="#Lidemy-HTTP-Challenge-心得-（下）" class="headerlink" title="Lidemy HTTP Challenge 心得 （下）"></a>Lidemy HTTP Challenge 心得 （下）</h3><p>寫了第二篇<a href="https://medium.com/@jas0nhuang/lidemy-http-challenge-%E4%B8%8B-axios-%E9%80%9A%E9%97%9C%E6%94%BB%E7%95%A5-73c69c9cc937" target="_blank" rel="noopener">用 Axios 通關 Lidemy HTTP Challenge （下）</a>，我想大部分的人都還沒有玩，還是等玩完再去看吧！</p><h2 id="今日進度"><a href="#今日進度" class="headerlink" title="今日進度"></a>今日進度</h2><h3 id="每天看一點-JavaScript"><a href="#每天看一點-JavaScript" class="headerlink" title="每天看一點 JavaScript"></a>每天看一點 JavaScript</h3><ul><li><input disabled="" type="checkbox"> 每天看一點 JavaScript<br>[ALG101] 第九單元<br>昨天看完第八單元，今天看第九單元。</li></ul><h3 id="寫-Week4-作業"><a href="#寫-Week4-作業" class="headerlink" title="寫 Week4 作業"></a>寫 Week4 作業</h3><ul><li><input checked="" disabled="" type="checkbox"> 寫 Week4 作業<br>跟昨天一樣，試著用不同的套件寫，然後重新思考挑戰題的寫法。</li></ul><h3 id="背包問題解題筆記"><a href="#背包問題解題筆記" class="headerlink" title="背包問題解題筆記"></a>背包問題解題筆記</h3><ul><li><input disabled="" type="checkbox"> 把背包問題解題的過程記錄下來<br>這幾天看看寫不寫的出來吧……感覺好像都沒辦法開始動……</li></ul><h3 id="開始看一點-HTML-CSS"><a href="#開始看一點-HTML-CSS" class="headerlink" title="開始看一點 HTML / CSS"></a>開始看一點 HTML / CSS</h3><ul><li><input checked="" disabled="" type="checkbox"> 開始看一點 HTML / CSS<br>雖然我在大 flash 時代就知道一些 HTML/CSS 的基礎了，但是因為缺乏美術細胞，所以總是弄不出好看的畫面，而且以往也都只知道點皮毛，細節都不清不楚，就先預習一下，以免之後看不見諸位切版大神的車尾燈！</li></ul><hr><h2 id="明日進度"><a href="#明日進度" class="headerlink" title="明日進度"></a>明日進度</h2><h3 id="完成-Week4-作業"><a href="#完成-Week4-作業" class="headerlink" title="完成 Week4 作業"></a>完成 Week4 作業</h3><ul><li><input disabled="" type="checkbox"> 完成 Week4 作業</li></ul><h3 id="寫參加程式導師計畫前半個月心得"><a href="#寫參加程式導師計畫前半個月心得" class="headerlink" title="寫參加程式導師計畫前半個月心得"></a>寫參加程式導師計畫前半個月心得</h3><ul><li><input disabled="" type="checkbox"> 寫參加程式導師計畫前半個月心得<br>寫文章的速度還沒有被訓練起來，那就以半個月寫一次整體心得為目標吧。（好像寫心得才真的是最難的事情。）</li></ul><h3 id="每天看一點-JavaScript-1"><a href="#每天看一點-JavaScript-1" class="headerlink" title="每天看一點 JavaScript"></a>每天看一點 JavaScript</h3><ul><li><input disabled="" type="checkbox"> 每天看一點 JavaScript<br>[JS101] 練習 Lv2 與 Lv3</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;昨日小記&quot;&gt;&lt;a href=&quot;#昨日小記&quot; class=&quot;headerlink&quot; title=&quot;昨日小記&quot;&gt;&lt;/a&gt;昨日小記&lt;/h2&gt;&lt;p&gt;很多事都沒有照著計畫在做，不過每天都有收獲我想應該就夠了。&lt;/p&gt;
&lt;h3 id=&quot;修正-week3-作業&quot;&gt;&lt;a href
      
    
    </summary>
    
    
      <category term="每日進度" scheme="http://JAS0NHUANG.github.io/diary/tags/%E6%AF%8F%E6%97%A5%E9%80%B2%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>J+12 [進度] 寫 Week4 作業 / 加強 JavaScript</title>
    <link href="http://JAS0NHUANG.github.io/diary/J-plus-12-progress/"/>
    <id>http://JAS0NHUANG.github.io/diary/J-plus-12-progress/</id>
    <published>2020-07-08T04:47:49.000Z</published>
    <updated>2020-07-08T04:47:49.230Z</updated>
    
    <content type="html"><![CDATA[<h2 id="昨日小記"><a href="#昨日小記" class="headerlink" title="昨日小記"></a>昨日小記</h2><h3 id="r3-0-異世界網站挑戰"><a href="#r3-0-異世界網站挑戰" class="headerlink" title="r3:0 異世界網站挑戰"></a>r3:0 異世界網站挑戰</h3><p>可能玩遊戲玩上癮，昨天跑去玩了 Minw 助教與老師一起做的 <a href="https://r30challenge.herokuapp.com/" target="_blank" rel="noopener">r3:0 異世界網站挑戰</a>，一樣很有趣，但是遊戲「性質」感覺不太一樣，至於為什麼會這麼說，大家之後自已去玩玩看就知道囉！</p><h3 id="API-串串"><a href="#API-串串" class="headerlink" title="API 串串"></a>API 串串</h3><p>第四週的那幾個作業感覺也變成 HTTP Challenge 遊戲的延伸了，花了不少時間研究怎麼串新的 Twitch API，「算是」成功的達到挑戰題的要求，只是 code 還很難看。也試著把其它作業裡用 Axios 寫的方法用 request 跟 https 玩了一下。感覺串 API 串出興趣來了……XD</p><h2 id="今日進度"><a href="#今日進度" class="headerlink" title="今日進度"></a>今日進度</h2><h3 id="每天看一點-JavaScript"><a href="#每天看一點-JavaScript" class="headerlink" title="每天看一點 JavaScript"></a>每天看一點 JavaScript</h3><ul><li><input checked="" disabled="" type="checkbox"> 每天看一點 JavaScript<br>[ALG101] 第八單元<br>昨天玩遊戲、玩第四週作業就忘了看了……今天放在第一個。感覺是應該要花點時間加強 JavaScript，看到老師說一定要去看參考範例，我是交作業之前都有看過了（好像這樣也不好！？），但是應該可以練習把每一題用老師的寫法再寫一次，強迫自已用比較有效率的寫法完成。</li></ul><h3 id="寫-Week4-作業"><a href="#寫-Week4-作業" class="headerlink" title="寫 Week4 作業"></a>寫 Week4 作業</h3><ul><li><input disabled="" type="checkbox"> 寫 Week4 作業<br>基本要求應該都算是完成了，應該會嘗試用不同套件再寫寫看，然後把挑戰題的 code 寫法再思考一下。</li></ul><h3 id="背包問題解題筆記"><a href="#背包問題解題筆記" class="headerlink" title="背包問題解題筆記"></a>背包問題解題筆記</h3><ul><li><input disabled="" type="checkbox"> 把背包問題解題的過程記錄下來<br>這幾天看看寫不寫的出來吧！</li></ul><hr><h2 id="明日進度"><a href="#明日進度" class="headerlink" title="明日進度"></a>明日進度</h2><h3 id="完成-Week4-作業"><a href="#完成-Week4-作業" class="headerlink" title="完成 Week4 作業"></a>完成 Week4 作業</h3><ul><li><input disabled="" type="checkbox"> 完成 Week4 作業</li></ul><h3 id="寫參加程式導師計畫前半個月心得"><a href="#寫參加程式導師計畫前半個月心得" class="headerlink" title="寫參加程式導師計畫前半個月心得"></a>寫參加程式導師計畫前半個月心得</h3><ul><li><input disabled="" type="checkbox"> 寫參加程式導師計畫前半個月心得<br>寫文章的速度還沒有被訓練起來，那就以半個月寫一次整體心得為目標吧。（好像寫心得才真的是最難的事情。）</li></ul><h3 id="每天看一點-JavaScript-1"><a href="#每天看一點-JavaScript-1" class="headerlink" title="每天看一點 JavaScript"></a>每天看一點 JavaScript</h3><ul><li><input disabled="" type="checkbox"> 每天看一點 JavaScript<br>[JS101] 練習 Lv2 與 Lv3</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;昨日小記&quot;&gt;&lt;a href=&quot;#昨日小記&quot; class=&quot;headerlink&quot; title=&quot;昨日小記&quot;&gt;&lt;/a&gt;昨日小記&lt;/h2&gt;&lt;h3 id=&quot;r3-0-異世界網站挑戰&quot;&gt;&lt;a href=&quot;#r3-0-異世界網站挑戰&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
      <category term="每日進度" scheme="http://JAS0NHUANG.github.io/diary/tags/%E6%AF%8F%E6%97%A5%E9%80%B2%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>J+11 [進度]  Lidemy HTTP Challenge 通關心得 / 交 week3 作業</title>
    <link href="http://JAS0NHUANG.github.io/diary/J-plus-11-progress/"/>
    <id>http://JAS0NHUANG.github.io/diary/J-plus-11-progress/</id>
    <published>2020-07-08T04:46:23.000Z</published>
    <updated>2020-07-08T04:46:23.831Z</updated>
    
    <content type="html"><![CDATA[<h2 id="昨日小記"><a href="#昨日小記" class="headerlink" title="昨日小記"></a>昨日小記</h2><h3 id="Lidemy-HTTP-Challenge"><a href="#Lidemy-HTTP-Challenge" class="headerlink" title="Lidemy HTTP Challenge"></a>Lidemy HTTP Challenge</h3><p>昨天晚上通關 Lidemy HTTP Challenge，寫了第一篇 medium 文章講我的<a href="https://medium.com/@jas0nhuang/lidemy-http-challenge-%E4%B8%8A-axios-%E9%80%9A%E9%97%9C%E6%94%BB%E7%95%A5-42785b365515" target="_blank" rel="noopener">通關心得與攻略</a>，很雷，所以還沒玩過的同學是建議先不要看。很有趣的遊戲，其實大家上課上到感覺被知識轟炸的時候可以去把遊戲打開來看一下 XD。</p><h2 id="今日進度"><a href="#今日進度" class="headerlink" title="今日進度"></a>今日進度</h2><h3 id="背包問題解題筆記"><a href="#背包問題解題筆記" class="headerlink" title="背包問題解題筆記"></a>背包問題解題筆記</h3><ul><li><input disabled="" type="checkbox"> 把背包問題解題的過程記錄下來<br>真的很難用文字解釋 Dynamic Programming（中譯為動態規劃），今天再試著整理一下思路把記錄寫下來。</li></ul><h3 id="交-Week3-作業"><a href="#交-Week3-作業" class="headerlink" title="交 Week3 作業"></a>交 Week3 作業</h3><ul><li><input checked="" disabled="" type="checkbox"> 交 week3 作業<br>完成解題、心得、挑戰題筆記，確認之後交作業。</li></ul><h3 id="每天看一點-JavaScript"><a href="#每天看一點-JavaScript" class="headerlink" title="每天看一點 JavaScript"></a>每天看一點 JavaScript</h3><ul><li><input disabled="" type="checkbox"> 每天看一點 JavaScript<br>[ALG101] 第八單元</li></ul><hr><h2 id="明日進度"><a href="#明日進度" class="headerlink" title="明日進度"></a>明日進度</h2><h3 id="寫參加程式導師計畫前半個月心得"><a href="#寫參加程式導師計畫前半個月心得" class="headerlink" title="寫參加程式導師計畫前半個月心得"></a>寫參加程式導師計畫前半個月心得</h3><ul><li><input disabled="" type="checkbox"> 寫參加程式導師計畫前半個月心得<br>寫文章的速度還沒有被訓練起來，那就以半個月寫一次整體心得為目標吧。</li></ul><h3 id="交-Week3-作業，開始寫-Week4-作業"><a href="#交-Week3-作業，開始寫-Week4-作業" class="headerlink" title="交 Week3 作業，開始寫 Week4 作業"></a>交 Week3 作業，開始寫 Week4 作業</h3><ul><li><input disabled="" type="checkbox"> 寫 Week4 作業<br>其實 week4 的作業也差不多寫完了……<br>剩下兩個 Twitch API 的挑戰題不知道怎樣可以抓 200 筆資料下來，試著找出解法。</li></ul><h3 id="每天看一點-JavaScript-1"><a href="#每天看一點-JavaScript-1" class="headerlink" title="每天看一點 JavaScript"></a>每天看一點 JavaScript</h3><ul><li><input disabled="" type="checkbox"> 每天看一點 JavaScript<br>[JS101] 練習 Lv2 與 Lv3</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;昨日小記&quot;&gt;&lt;a href=&quot;#昨日小記&quot; class=&quot;headerlink&quot; title=&quot;昨日小記&quot;&gt;&lt;/a&gt;昨日小記&lt;/h2&gt;&lt;h3 id=&quot;Lidemy-HTTP-Challenge&quot;&gt;&lt;a href=&quot;#Lidemy-HTTP-Challenge&quot; c
      
    
    </summary>
    
    
      <category term="每日進度" scheme="http://JAS0NHUANG.github.io/diary/tags/%E6%AF%8F%E6%97%A5%E9%80%B2%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>J+10 [進度] 完成 Week3 作業 / 解題心得筆記</title>
    <link href="http://JAS0NHUANG.github.io/diary/J-plus-10-progress/"/>
    <id>http://JAS0NHUANG.github.io/diary/J-plus-10-progress/</id>
    <published>2020-07-08T04:44:01.000Z</published>
    <updated>2020-07-08T04:44:01.028Z</updated>
    
    <content type="html"><![CDATA[<h2 id="昨日小記"><a href="#昨日小記" class="headerlink" title="昨日小記"></a>昨日小記</h2><h3 id="Lidemy-HTTP-Challenge"><a href="#Lidemy-HTTP-Challenge" class="headerlink" title="Lidemy HTTP Challenge"></a>Lidemy HTTP Challenge</h3><p>昨天不小心打開就停不下來了……試著用 axios 在 node 上面去串接，目前解到第 14 關，看了提示還是沒有什麼頭緒，晚點再繼續找資料。</p><h2 id="今日進度"><a href="#今日進度" class="headerlink" title="今日進度"></a>今日進度</h2><h3 id="背包問題解題筆記"><a href="#背包問題解題筆記" class="headerlink" title="背包問題解題筆記"></a>背包問題解題筆記</h3><ul><li><input disabled="" type="checkbox"> 把背包問題解題的過程記錄下來<br>這個筆記比較難寫，可能要再多消化一下再嘗試寫下來。</li></ul><h3 id="完成-Week3-作業"><a href="#完成-Week3-作業" class="headerlink" title="完成 Week3 作業"></a>完成 Week3 作業</h3><ul><li><input disabled="" type="checkbox"> 完成 week3 作業<br>完成解題、心得、挑戰題筆記，確認之後明天應該可以交作業。</li></ul><h3 id="看完-NET201-網路基礎概論"><a href="#看完-NET201-網路基礎概論" class="headerlink" title="看完 [NET201] 網路基礎概論"></a>看完 [NET201] 網路基礎概論</h3><ul><li><input checked="" disabled="" type="checkbox"> 看完 [NET201] 網路基礎概論</li></ul><h3 id="每天看一點-JavaScript"><a href="#每天看一點-JavaScript" class="headerlink" title="每天看一點 JavaScript"></a>每天看一點 JavaScript</h3><ul><li><input checked="" disabled="" type="checkbox"> 每天看一點 JavaScript<br>[ALG101] 第七單元結束</li></ul><hr><h2 id="明日進度"><a href="#明日進度" class="headerlink" title="明日進度"></a>明日進度</h2><h3 id="寫參加程式導師計畫第一週心得"><a href="#寫參加程式導師計畫第一週心得" class="headerlink" title="寫參加程式導師計畫第一週心得"></a>寫參加程式導師計畫第一週心得</h3><ul><li><input disabled="" type="checkbox"> 寫參加程式導師計畫第一週心得</li></ul><h3 id="交-Week3-作業，開始寫-Week4-作業"><a href="#交-Week3-作業，開始寫-Week4-作業" class="headerlink" title="交 Week3 作業，開始寫 Week4 作業"></a>交 Week3 作業，開始寫 Week4 作業</h3><ul><li><input disabled="" type="checkbox"> 交 Week3 作業，開始寫 Week4 作業<br>其實 week4 的作業也差不多寫完了……<br>剩下兩個 Twitch API 的挑戰題不知道怎樣可以抓 200 筆資料下來。</li></ul><h3 id="每天看一點-JavaScript-1"><a href="#每天看一點-JavaScript-1" class="headerlink" title="每天看一點 JavaScript"></a>每天看一點 JavaScript</h3><ul><li><input disabled="" type="checkbox"> 每天看一點 JavaScript<br>[ALG101] 第八單元以後的內容、 [JS101] 練習 Lv2 與 Lv3</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;昨日小記&quot;&gt;&lt;a href=&quot;#昨日小記&quot; class=&quot;headerlink&quot; title=&quot;昨日小記&quot;&gt;&lt;/a&gt;昨日小記&lt;/h2&gt;&lt;h3 id=&quot;Lidemy-HTTP-Challenge&quot;&gt;&lt;a href=&quot;#Lidemy-HTTP-Challenge&quot; c
      
    
    </summary>
    
    
      <category term="每日進度" scheme="http://JAS0NHUANG.github.io/diary/tags/%E6%AF%8F%E6%97%A5%E9%80%B2%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] TCPIP 與 API</title>
    <link href="http://JAS0NHUANG.github.io/diary/J-plus-9-note-TCPIP-API/"/>
    <id>http://JAS0NHUANG.github.io/diary/J-plus-9-note-TCPIP-API/</id>
    <published>2020-06-21T23:52:21.000Z</published>
    <updated>2020-06-21T23:52:21.988Z</updated>
    
    <content type="html"><![CDATA[<h2 id="網路層級與-TCP-IP-模型"><a href="#網路層級與-TCP-IP-模型" class="headerlink" title="網路層級與 TCP/IP 模型"></a>網路層級與 TCP/IP 模型</h2><p>在 HTTP 筆記裡就有這張圖啦：<br><img src="/diary/source/images/Web_Layer" alt="Web Layer">  </p><p>OSI 七層，各層級都有自已的協定。<br>TCP/IP 模型為四層：應用層、傳輸層、網路層、鏈結層。<br>HTTP 屬於應用層，TCP 屬於傳送層，IP 屬於網路層。  </p><h3 id="IP-位址"><a href="#IP-位址" class="headerlink" title="IP 位址"></a>IP 位址</h3><p>IPv4 與 IPv6<br>有固定 IP 與浮動 IP  </p><p>理想情況：世界上的所有電腦都有一個不重覆的固定 IP（顯然不可能……）  </p><p>實際狀況：每台內網的電腦都有一個虛擬（私有 private） IP 連到數據機，數據機再以一個對外的固定 IP 對外連線。  </p><h3 id="Port-連接埠"><a href="#Port-連接埠" class="headerlink" title="Port 連接埠"></a>Port 連接埠</h3><p>在 IP 位址後面可以接上 Port，目的是區別在同一個主機上的不同服務<br>預設：HTTP 80、HTTPS 443、FTP 21……  </p><h3 id="TCP-與-UDP"><a href="#TCP-與-UDP" class="headerlink" title="TCP 與 UDP"></a>TCP 與 UDP</h3><p>兩個都是傳輸層的協定，不同點在於，TCP 是可靠的連接，有所謂的三次握手。<br>UDP 則不必要保證可靠性，視訊通話、網路直播……等以即時性為訴求的服務，通常會建立在這個傳輸協定上。  </p><h2 id="什麼是-API"><a href="#什麼是-API" class="headerlink" title="什麼是 API"></a>什麼是 API</h2><p>Application Programming Interface：應用程式介面<br>一種介面, 一個溝通的管道, 資料交換的方法<br>制作 USB 廠商的隨身碟！！！<br>提供「資料」 或接收資料, 提供 API 者可以控制什麼資料可以讓使用者存取。<br>透過「網路」提供的 API 就會被稱做 Web API，而通常 Web API 都是在講 HTTP API（透過 HTTP 協定提供的 API）。<br><a href="https://picsum.photos" target="_blank" rel="noopener">Lorem Picsum</a> 一個有趣的 API。   </p><h3 id="API-的功能"><a href="#API-的功能" class="headerlink" title="API 的功能"></a>API 的功能</h3><ul><li>對使用者：  </li></ul><ol><li>固定選項  </li><li>減少溝通障礙  </li></ol><ul><li>對提供者：  </li></ul><ol><li>減少人力  </li><li>不提供沒有的選項，沒有客製化  </li></ol><h3 id="再用一次-request-串串"><a href="#再用一次-request-串串" class="headerlink" title="再用一次 request 串串"></a>再用一次 request 串串</h3><p>測試用 API：[Req | Res]（<a href="https://reqres.in）" target="_blank" rel="noopener">https://reqres.in）</a><br>GET：  </p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const request &#x3D; require(&#39;request&#39;)</span><br><span class="line">request(</span><br><span class="line">  &#39;https:&#x2F;&#x2F;reqres.in&#x2F;api&#x2F;users&#39;,</span><br><span class="line">  function(error, response, body) &#123;</span><br><span class="line">    console.log(body)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>node 小技巧：<br>讀取參數  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const process &#x3D; require(&#39;process&#39;)</span><br><span class="line">console.log(process.argv）</span><br></pre></td></tr></table></figure></li></ul><p>POST：  </p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const request &#x3D; require(&#39;request&#39;)</span><br><span class="line">request.post(</span><br><span class="line">  &#123;</span><br><span class="line">    url: &#39;https:&#x2F;&#x2F;reqres.in&#x2F;api&#x2F;users&#39;,</span><br><span class="line">    form: &#123;</span><br><span class="line">      name:&#39;JJ&#39;,</span><br><span class="line">      job:&#39;none&#39;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  function(error, response, body) &#123;</span><br><span class="line">    console.log(body)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="XML-與-JSON"><a href="#XML-與-JSON" class="headerlink" title="XML 與 JSON"></a>XML 與 JSON</h3><p>XML 歷史悠久，通常會用 SOAP 協定傳送。（node 上面可以用 node-soap 套件來傳送）  </p><p>現在大部分都用 JSON 這個資料格式了。<br>如果回傳的 JSON 內容被轉換為字串的話，可以用 <code>JSON.parse()</code> 來轉換為 JSON 資料。<br>也可以反轉，將 JSON 資料轉換為字串：<code>JSON.stringify()</code>  </p><h3 id="到底什麼是-RESTful"><a href="#到底什麼是-RESTful" class="headerlink" title="到底什麼是 RESTful"></a>到底什麼是 RESTful</h3><p>不是協定、標準，只是一種「風格」<br>查詢用 GET，新增用 POST，刪除用 DELETE，修改用 PATCH。大部分的 API 都是 RESTful 風格了，因為它比較直覺，好懂，也符合 HTTP request 的語意。  </p><h2 id="CLI-上好用的工具"><a href="#CLI-上好用的工具" class="headerlink" title="CLI 上好用的工具"></a>CLI 上好用的工具</h2><h3 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h3><p><code>curl 網址</code> 回傳整個頁面的回應<br><code>curl -i 網址</code> 只下載 header</p><h3 id="ping"><a href="#ping" class="headerlink" title="ping"></a>ping</h3><p>測試是否能連線到某個伺服器</p><h3 id="telnet"><a href="#telnet" class="headerlink" title="telnet"></a>telnet</h3><p><code>telnet {IP} {port}</code> 可以連線到該伺服器的某個 port 上。<br>預設 port 為 23  </p><h3 id="nslookup"><a href="#nslookup" class="headerlink" title="nslookup"></a>nslookup</h3><p>查看 DNS 查詢到的 IP</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;網路層級與-TCP-IP-模型&quot;&gt;&lt;a href=&quot;#網路層級與-TCP-IP-模型&quot; class=&quot;headerlink&quot; title=&quot;網路層級與 TCP/IP 模型&quot;&gt;&lt;/a&gt;網路層級與 TCP/IP 模型&lt;/h2&gt;&lt;p&gt;在 HTTP 筆記裡就有這張圖啦：&lt;
      
    
    </summary>
    
    
      <category term="網路概論" scheme="http://JAS0NHUANG.github.io/diary/tags/%E7%B6%B2%E8%B7%AF%E6%A6%82%E8%AB%96/"/>
    
      <category term="TCP/IP" scheme="http://JAS0NHUANG.github.io/diary/tags/TCP-IP/"/>
    
  </entry>
  
  <entry>
    <title>J+9 [進度] Week3 解題心得 / 瞭解 API</title>
    <link href="http://JAS0NHUANG.github.io/diary/J-plus-9-progress/"/>
    <id>http://JAS0NHUANG.github.io/diary/J-plus-9-progress/</id>
    <published>2020-06-21T22:06:54.000Z</published>
    <updated>2020-06-21T22:08:02.193Z</updated>
    
    <content type="html"><![CDATA[<h2 id="昨日小記"><a href="#昨日小記" class="headerlink" title="昨日小記"></a>昨日小記</h2><h3 id="與工程師閒聊"><a href="#與工程師閒聊" class="headerlink" title="與工程師閒聊"></a>與工程師閒聊</h3><p>帶小孩到朋友家聚餐，跟一個技術控工程師朋友（在 nokia 貝爾實驗室工作的強人……）聊了一下，他也是覺得在 Linux 系統上處理資料還是 grep、awk、sed 最常用也最好用；也提到基礎打好比較重要，不必一直跟風學新的框架，像是 Linux、JavaScript、基本的演算法這些東西大概一直都會用到，真的學好了之後要再學任何框架都不會是太困難的事情。<br>另外他還提到 kubernetes，說這個技術值得去學學，我是因為之前在學 Red Hat 所以有聽過這個技術，也大概知道它是管理像 Docker 這種容器的系統，只是還不太瞭解 K8s 在網路前、後端開發上是如何應用的，感覺是比較偏後端伺服器管理會用到的東西就是了。</p><h3 id="複習背包問題"><a href="#複習背包問題" class="headerlink" title="複習背包問題"></a>複習背包問題</h3><p>複習了一下背包問題，重新寫了一次貪婪的小偷 2，遇到一點點實作上的小問題，但是最後還是解決了，其實瞭解 Dynamic Programming 的原則是如何應用在這題上面就不會太困難了。（只是寫出來的 code 還是很醜就是了……）</p><h2 id="今日進度"><a href="#今日進度" class="headerlink" title="今日進度"></a>今日進度</h2><h3 id="背包問題解題筆記"><a href="#背包問題解題筆記" class="headerlink" title="背包問題解題筆記"></a>背包問題解題筆記</h3><ul><li><input disabled="" type="checkbox"> 把背包問題解題的過程記錄下來   </li></ul><h3 id="寫-Week3-hw6-解題心得"><a href="#寫-Week3-hw6-解題心得" class="headerlink" title="寫 Week3 hw6 解題心得"></a>寫 Week3 hw6 解題心得</h3><ul><li><input checked="" disabled="" type="checkbox"> 寫 week3 hw6<br>把所有解題的心得寫完</li></ul><h3 id="看-NET201-API-與資料格式"><a href="#看-NET201-API-與資料格式" class="headerlink" title="看 [NET201] API 與資料格式"></a>看 [NET201] API 與資料格式</h3><ul><li><input disabled="" type="checkbox"> [NET201] API 與資料格式  </li></ul><hr><h2 id="明日進度"><a href="#明日進度" class="headerlink" title="明日進度"></a>明日進度</h2><h3 id="寫參加程式導師計畫第一週心得"><a href="#寫參加程式導師計畫第一週心得" class="headerlink" title="寫參加程式導師計畫第一週心得"></a>寫參加程式導師計畫第一週心得</h3><ul><li><input disabled="" type="checkbox"> 寫參加程式導師計畫第一週心得</li></ul><h3 id="每天看一點-JavaScript"><a href="#每天看一點-JavaScript" class="headerlink" title="每天看一點 JavaScript"></a>每天看一點 JavaScript</h3><ul><li><input disabled="" type="checkbox"> 每天看一點 JavaScript<br>[ALG101] 第七單元以後的內容、 [JS101] 練習 Lv2 與 Lv3  </li></ul><h3 id="看完-NET201-網路基礎概論"><a href="#看完-NET201-網路基礎概論" class="headerlink" title="看完 [NET201] 網路基礎概論"></a>看完 [NET201] 網路基礎概論</h3><ul><li><input disabled="" type="checkbox"> 看完 [NET201] 網路基礎概論  </li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;昨日小記&quot;&gt;&lt;a href=&quot;#昨日小記&quot; class=&quot;headerlink&quot; title=&quot;昨日小記&quot;&gt;&lt;/a&gt;昨日小記&lt;/h2&gt;&lt;h3 id=&quot;與工程師閒聊&quot;&gt;&lt;a href=&quot;#與工程師閒聊&quot; class=&quot;headerlink&quot; title=&quot;與工程師閒
      
    
    </summary>
    
    
      <category term="每日進度" scheme="http://JAS0NHUANG.github.io/diary/tags/%E6%AF%8F%E6%97%A5%E9%80%B2%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>J+8 [進度] 42 學校 Check-in / 背包問題複習</title>
    <link href="http://JAS0NHUANG.github.io/diary/J-plus-8-progress/"/>
    <id>http://JAS0NHUANG.github.io/diary/J-plus-8-progress/</id>
    <published>2020-06-20T22:04:29.000Z</published>
    <updated>2020-06-21T22:07:51.185Z</updated>
    
    <content type="html"><![CDATA[<h2 id="今日進度"><a href="#今日進度" class="headerlink" title="今日進度"></a>今日進度</h2><h3 id="42-Check-in"><a href="#42-Check-in" class="headerlink" title="42 Check-in"></a>42 Check-in</h3><ul><li><input checked="" disabled="" type="checkbox"> 42 Check-in<br>42 學校網路會議 check-in ，會議裡說下次的 piscine (有看少年 Pi 的應該知道這個字是啥意思吧？!) 要等明年啦……<br>(42 學校是法國一間神奇的 coding 學校，有興趣可以上網找看看!)</li></ul><h3 id="快速複習-ALG101-先別急著寫-leetcode-單元-6"><a href="#快速複習-ALG101-先別急著寫-leetcode-單元-6" class="headerlink" title="快速複習 [ALG101] 先別急著寫 leetcode 單元 6"></a>快速複習 [ALG101] 先別急著寫 leetcode 單元 6</h3><ul><li><input checked="" disabled="" type="checkbox"> [ALG101] 看完先別急著寫 leetcode 單元 6<br>看完 [ALG101] 單元 6</li></ul><h3 id="複習背包問題"><a href="#複習背包問題" class="headerlink" title="複習背包問題"></a>複習背包問題</h3><ul><li><input checked="" disabled="" type="checkbox"> 複習背包問題，重寫 week3 超級挑戰題</li></ul><h3 id="看-NET201-API-與資料格式"><a href="#看-NET201-API-與資料格式" class="headerlink" title="看 [NET201] API 與資料格式"></a>看 [NET201] API 與資料格式</h3><ul><li><input disabled="" type="checkbox"> [NET201] API 與資料格式</li></ul><hr><h2 id="明日進度"><a href="#明日進度" class="headerlink" title="明日進度"></a>明日進度</h2><h3 id="背包問題解題筆記"><a href="#背包問題解題筆記" class="headerlink" title="背包問題解題筆記"></a>背包問題解題筆記</h3><ul><li><input disabled="" type="checkbox"> 把背包問題解題的過程記錄下來</li></ul><h3 id="寫-Week3-hw6-解題心得"><a href="#寫-Week3-hw6-解題心得" class="headerlink" title="寫 Week3 hw6 解題心得"></a>寫 Week3 hw6 解題心得</h3><ul><li><input disabled="" type="checkbox"> 寫 week3 hw6<br>把所有解題的心得寫完</li></ul><h3 id="看-NET201-API-與資料格式-1"><a href="#看-NET201-API-與資料格式-1" class="headerlink" title="看 [NET201] API 與資料格式"></a>看 [NET201] API 與資料格式</h3><ul><li><input disabled="" type="checkbox"> [NET201] API 與資料格式</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;今日進度&quot;&gt;&lt;a href=&quot;#今日進度&quot; class=&quot;headerlink&quot; title=&quot;今日進度&quot;&gt;&lt;/a&gt;今日進度&lt;/h2&gt;&lt;h3 id=&quot;42-Check-in&quot;&gt;&lt;a href=&quot;#42-Check-in&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
    
      <category term="每日進度" scheme="http://JAS0NHUANG.github.io/diary/tags/%E6%AF%8F%E6%97%A5%E9%80%B2%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>J+7 [進度] 複習 [ALG101] / 瞭解 TCP/IP</title>
    <link href="http://JAS0NHUANG.github.io/diary/J-plus-7-progress/"/>
    <id>http://JAS0NHUANG.github.io/diary/J-plus-7-progress/</id>
    <published>2020-06-19T22:09:31.000Z</published>
    <updated>2020-06-21T22:08:30.052Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://jas0nhuang.github.io/diary/"><img src="https://img.shields.io/static/v1?logo=slack&label=Slack&message=JAS0N%20HUANG&color=eb1000&&style=flat-square" alt="slack"></a><br>貼爆！歡迎找我聊天（雖然我已經自已跑去煩好幾個人了 XD ……，然後部落格裡就不放連結了！）  </p><h3 id="挑戰題到底要不要挑戰"><a href="#挑戰題到底要不要挑戰" class="headerlink" title="挑戰題到底要不要挑戰"></a>挑戰題到底要不要挑戰</h3><p>昨天把 Week2 作業加兩個「舊」挑戰題整理好，交了作業，然後就看到老師的更新……<br>看了看新的挑戰題，思考了一下……決定先不管它們啦！<br>也不是說就打算完全不想了，只是不要被卡在那裡，先把課程裡要求的基礎能力打穩再說吧。  </p><hr><h2 id="今日進度"><a href="#今日進度" class="headerlink" title="今日進度"></a>今日進度</h2><h3 id="Slack-徽章"><a href="#Slack-徽章" class="headerlink" title="Slack 徽章"></a>Slack 徽章</h3><ul><li><input checked="" disabled="" type="checkbox"> 每日進度放上 Slack 徽章<br>實在太酷，一定要跟風弄一個。</li></ul><h3 id="快速複習-ALG101-先別急著寫-leetcode-單元-5"><a href="#快速複習-ALG101-先別急著寫-leetcode-單元-5" class="headerlink" title="快速複習 [ALG101] 先別急著寫 leetcode 單元 5"></a>快速複習 [ALG101] 先別急著寫 leetcode 單元 5</h3><ul><li><input checked="" disabled="" type="checkbox"> [ALG101] 先別急著寫 leetcode 單元 6 一半<br>看到 [ALG101] 單元 6 一半</li></ul><h3 id="寫-Week3-作業"><a href="#寫-Week3-作業" class="headerlink" title="寫 Week3 作業"></a>寫 Week3 作業</h3><ul><li><input checked="" disabled="" type="checkbox"> 寫 Week3 作業<br>之前都寫過了，每天寫個一兩題，再把它們全部重寫一次。<br>寫完 hw1 - hw5</li></ul><h3 id="看-NET201-TCP-IP"><a href="#看-NET201-TCP-IP" class="headerlink" title="看 [NET201] TCP/IP"></a>看 [NET201] TCP/IP</h3><ul><li><input disabled="" type="checkbox"> [NET201] TCP/IP</li></ul><hr><h2 id="明日進度"><a href="#明日進度" class="headerlink" title="明日進度"></a>明日進度</h2><h3 id="看-NET201-API-與資料格式"><a href="#看-NET201-API-與資料格式" class="headerlink" title="看 [NET201] API 與資料格式"></a>看 [NET201] API 與資料格式</h3><ul><li><input disabled="" type="checkbox"> [NET201] API 與資料格式</li></ul><h3 id="快速複習-ALG101-先別急著寫-leetcode-單元-6"><a href="#快速複習-ALG101-先別急著寫-leetcode-單元-6" class="headerlink" title="快速複習 [ALG101] 先別急著寫 leetcode 單元 6"></a>快速複習 [ALG101] 先別急著寫 leetcode 單元 6</h3><ul><li><input disabled="" type="checkbox"> [ALG101] 先別急著寫 leetcode 單元 6</li></ul><h3 id="寫-Week3-作業-1"><a href="#寫-Week3-作業-1" class="headerlink" title="寫 Week3 作業"></a>寫 Week3 作業</h3><ul><li><input disabled="" type="checkbox"> 寫 Week3 作業 hw1 - hw5</li></ul><hr><h2 id="未來計畫"><a href="#未來計畫" class="headerlink" title="未來計畫"></a>未來計畫</h2><h3 id="按照課程進度前進"><a href="#按照課程進度前進" class="headerlink" title="按照課程進度前進"></a>按照課程進度前進</h3><h3 id="將-JS101-練習-Lv2-與-Lv3-做完"><a href="#將-JS101-練習-Lv2-與-Lv3-做完" class="headerlink" title="將 [JS101] 練習 Lv2 與 Lv3 做完"></a>將 [JS101] 練習 Lv2 與 Lv3 做完</h3><ul><li><input disabled="" type="checkbox"> [JS101] 練習 Lv2 與 Lv3 做完<br>很多都跟作業、[ALG101] 的內容重覆了，大概看一下講解影片看看有沒有什麼我沒有想到的地方。有時間再慢慢做。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://jas0nhuang.github.io/diary/&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1?logo=slack&amp;label=Slack&amp;message=JAS0N%20HUANG&amp;col
      
    
    </summary>
    
    
      <category term="每日進度" scheme="http://JAS0NHUANG.github.io/diary/tags/%E6%AF%8F%E6%97%A5%E9%80%B2%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>J+6 [進度] 複習 [ALG101] / 玩玩 HTTP、API</title>
    <link href="http://JAS0NHUANG.github.io/diary/J-plus-6-progress/"/>
    <id>http://JAS0NHUANG.github.io/diary/J-plus-6-progress/</id>
    <published>2020-06-18T19:16:52.000Z</published>
    <updated>2020-06-21T22:08:49.188Z</updated>
    
    <content type="html"><![CDATA[<h2 id="昨日小記"><a href="#昨日小記" class="headerlink" title="昨日小記"></a>昨日小記</h2><h3 id="再走一次迷宮"><a href="#再走一次迷宮" class="headerlink" title="再走一次迷宮"></a>再走一次迷宮</h3><p>把 LIOJ 1053 迷宮再走一次，其實就還是在默寫，先學著把模仿做好囉！<br>但是其中遇到一個神奇的地方，就是最後在判斷是否為未走過的點以及原始點（老師說的 A 點）到前往點（老師說的 B 點）的距離比較那裡。<br>我第一次不知道腦子進了什麼東西，寫出來變這樣，明顯就是錯誤（不相關）的判斷：  </p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (stepsArr[newX][newY] &gt; stepsArr[x][y] + stepsArr[newX][newY] || stepsArr[newX][newY] !== <span class="literal">undefined</span>) <span class="keyword">continue</span></span><br></pre></td></tr></table></figure><p>但是居然 AC！<br>仔細又看了一次老師的解法，發現好像沒有去判斷 A 走到 B 點的距離也沒關係，所以就試著把那一部分刪了，變成：  </p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (stepsArr[newX][newY] !== <span class="literal">undefined</span>) <span class="keyword">continue</span></span><br></pre></td></tr></table></figure><p>也還是 AC。XD<br>我自已的感覺是，其實只要判斷是否有走過就可以了？！或者是測資還不夠強，遇到更複雜的迷宮就可能會算錯？！</p><hr><h2 id="今日進度"><a href="#今日進度" class="headerlink" title="今日進度"></a>今日進度</h2><h3 id="快速複習-ALG101-先別急著寫-leetcode-單元-5"><a href="#快速複習-ALG101-先別急著寫-leetcode-單元-5" class="headerlink" title="快速複習 [ALG101] 先別急著寫 leetcode 單元 5"></a>快速複習 [ALG101] 先別急著寫 leetcode 單元 5</h3><ul><li><input checked="" disabled="" type="checkbox"> [ALG101] 先別急著寫 leetcode 單元 5<br>決定先看一半，其它時間學新的東西。  </li></ul><h3 id="看-NET201-HTTP-協定"><a href="#看-NET201-HTTP-協定" class="headerlink" title="看 [NET201] HTTP 協定"></a>看 [NET201] HTTP 協定</h3><ul><li><input disabled="" type="checkbox"> [NET201] HTTP 協定<br>仔細看完影片並做筆記。  </li></ul><h3 id="玩一下-API"><a href="#玩一下-API" class="headerlink" title="玩一下 API"></a>玩一下 API</h3><ul><li><input checked="" disabled="" type="checkbox"> 玩一下第四週作業裡的 API<br>其實就是很快的瀏覽了一次 [NET201] 的影片，介紹到 API 實作的時候覺得蠻有趣的，然後看到第四週作業的內容就不小心玩了一下，第四週的前兩個作業解的差不多了……<br>上 npm 找 request 這個套件的介紹時，看到它上面大大的紅字 “<a href="https://www.npmjs.com/package/request" target="_blank" rel="noopener">This package has been deprecated</a>“，看了一下 <a href="https://github.com/request/request/issues/3142" target="_blank" rel="noopener">issue #3142</a> 還有推薦的替代方案：<a href="https://github.com/request/request/issues/3143" target="_blank" rel="noopener">#3143</a>，發現 axios 這個名字好像最近很常在網路上看到，就想說自已研究看看了。<br>有興趣的人可以到我 week4 分支的 <a href="https://github.com/Lidemy/mentor-program-4th-JAS0NHUANG/tree/week4/homeworks/week4" target="_blank" rel="noopener">week4</a> 裡看一下，給我一點意見…… （我好像是從 week2 分支切過去的，所以 repo 有點亂，反正到時候 week4 應該會再重開一個分支）  </li></ul><hr><h2 id="明日進度"><a href="#明日進度" class="headerlink" title="明日進度"></a>明日進度</h2><h3 id="快速複習-ALG101-先別急著寫-leetcode-單元-6"><a href="#快速複習-ALG101-先別急著寫-leetcode-單元-6" class="headerlink" title="快速複習 [ALG101] 先別急著寫 leetcode 單元 6"></a>快速複習 [ALG101] 先別急著寫 leetcode 單元 6</h3><ul><li><input disabled="" type="checkbox"> [ALG101] 先別急著寫 leetcode 單元 5<br>把 [ALG101] 單元 5、6 分四天（或更多天）看吧！以免有倦怠感……<br>也讓自已每天回憶一點 JavaScript。  </li></ul><h3 id="看-NET201-TCP-IP"><a href="#看-NET201-TCP-IP" class="headerlink" title="看 [NET201] TCP/IP"></a>看 [NET201] TCP/IP</h3><ul><li><input disabled="" type="checkbox"> [NET201] TCP/IP  </li></ul><hr><h2 id="未來計畫"><a href="#未來計畫" class="headerlink" title="未來計畫"></a>未來計畫</h2><h3 id="按照課程進度前進"><a href="#按照課程進度前進" class="headerlink" title="按照課程進度前進"></a>按照課程進度前進</h3><h3 id="將-JS101-練習-Lv2-與-Lv3-做完"><a href="#將-JS101-練習-Lv2-與-Lv3-做完" class="headerlink" title="將 [JS101] 練習 Lv2 與 Lv3 做完"></a>將 [JS101] 練習 Lv2 與 Lv3 做完</h3><ul><li><input disabled="" type="checkbox"> [JS101] 練習 Lv2 與 Lv3 做完<br>很多都跟作業、[ALG101] 的內容重覆了，大概看一下講解影片看看有沒有什麼我沒有想到的地方。有時間再慢慢做。  </li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;昨日小記&quot;&gt;&lt;a href=&quot;#昨日小記&quot; class=&quot;headerlink&quot; title=&quot;昨日小記&quot;&gt;&lt;/a&gt;昨日小記&lt;/h2&gt;&lt;h3 id=&quot;再走一次迷宮&quot;&gt;&lt;a href=&quot;#再走一次迷宮&quot; class=&quot;headerlink&quot; title=&quot;再走一次迷
      
    
    </summary>
    
    
      <category term="每日進度" scheme="http://JAS0NHUANG.github.io/diary/tags/%E6%AF%8F%E6%97%A5%E9%80%B2%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] 傳紙條與 HTTP 基本概念</title>
    <link href="http://JAS0NHUANG.github.io/diary/J-plus-6-note-http/"/>
    <id>http://JAS0NHUANG.github.io/diary/J-plus-6-note-http/</id>
    <published>2020-06-18T12:48:47.000Z</published>
    <updated>2020-06-21T22:32:00.770Z</updated>
    
    <content type="html"><![CDATA[<h2 id="傳紙條"><a href="#傳紙條" class="headerlink" title="傳紙條"></a>傳紙條</h2><h3 id="告白篇"><a href="#告白篇" class="headerlink" title="告白篇"></a>告白篇</h3><ol><li>來源</li><li>目的地</li><li>三次前置作業，確保收發功能（三次握手：確定發送、接收功能正常）</li></ol><h3 id="訂便當"><a href="#訂便當" class="headerlink" title="訂便當"></a>訂便當</h3><ol><li>格式統一</li><li>特殊需求（頭-特殊資訊、身體-內容）</li><li>回覆格式：以數字/狀態碼回應 200、300、400、404、500、503(也有頭-數字、身體-內容)</li><li>不同動作：GET POST DELET PUT</li></ol><h3 id="發大財"><a href="#發大財" class="headerlink" title="發大財"></a>發大財</h3><ol><li>統一服務代碼：80、3000、4000、5000……</li><li>格式簡化：對不同服務可以有不同格式</li><li>加速：有些服務不用確認如 streaming</li><li>地址、校名：ip Domain</li></ol><ul><li>為何需要協定（protocol）？<br>為了讓人能夠溝通，需要規範，所以其實語言就是一種 protocol 啦！？</li></ul><h2 id="HTTP-是什麼"><a href="#HTTP-是什麼" class="headerlink" title="HTTP 是什麼"></a>HTTP 是什麼</h2><p>H [超] T[文本] T[傳輸] P[協定]！！！  </p><p>它是一個「協定」，我們要做的事情是去瞭解它的「規則」。  </p><p>HTTP 屬於網路分層中的「應用層」（Application），每層都有相關的「協定」，這個到 TCP/IP 的部分會更詳細的討論。<br><img src="/diary/images/Web_Layers.png" alt="Web Layers"></p><h2 id="HTTP-request-與-response"><a href="#HTTP-request-與-response" class="headerlink" title="HTTP request 與 response"></a>HTTP request 與 response</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">client ---request---&gt; server</span><br><span class="line">client &lt;--response--- server</span><br></pre></td></tr></table></figure><p>以瀏覽器為例：  </p><ol><li><p>我們在網址列輸入 <a href="https://www.google.com" target="_blank" rel="noopener">https://www.google.com</a>  </p></li><li><p>瀏覽器幫我們傳一個 Request 到 server（幫我們寫紙條）<br>Request 差不多長這樣（在每個瀏覽器上會有些不同）：<br>（因為是 GET 所以只有 head 沒有 body）  </p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">:authority: www.google.com</span><br><span class="line">:method: GET</span><br><span class="line">:path: &#x2F;</span><br><span class="line">:scheme: https</span><br><span class="line">accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9</span><br><span class="line">accept-encoding: gzip, deflate, br</span><br><span class="line">accept-language: en-US,en;q&#x3D;0.9</span><br><span class="line">..................................................</span><br></pre></td></tr></table></figure></li><li><p>server 會回傳一個帶有 HTML 原始碼的 Response。(完成紙條上的要求）  </p></li><li><p>瀏覽器接收到這個 Response 然後渲染（render）出來。  </p></li></ol><h2 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h2><p>網路世界的郵差，進行 IP 與 Domain Name 的轉換、翻譯。<br>DNS 伺服器也有分層，company &gt; isp &gt; country &gt; root<br>可以用 <code>nslookup</code> 查看IP 與 Domain Name 的對照。  </p><p>一個神奇的檔案：<code>/etc/hosts</code> 裡面寫有電腦預設的 IP / Domain Name 對照表  </p><h2 id="瀏覽器與其它"><a href="#瀏覽器與其它" class="headerlink" title="瀏覽器與其它"></a>瀏覽器與其它</h2><p>除了瀏覽器可以傳送 request 與接收 response 之外，我們也可以自已寫程式完成這個任務。<br>使用 request 這個套件就可以寫出一個這樣的 node 程式。<br>（node 也有內建函式可以用。<code>http.request(url[, options][, callback])</code>）  </p><h2 id="GET、POST-與其它"><a href="#GET、POST-與其它" class="headerlink" title="GET、POST 與其它"></a>GET、POST 與其它</h2><p>執行什麼動作：  </p><ol><li>GET：最常使用，用於取得資料，通常不會有 request body，只需要 header  </li><li>POST：傳送資料，通常會有 request body，body 內容為要向伺服器傳送的資料  </li><li>DELETE：刪除資料  </li><li>PUT：會完全取代所選取的資料  </li><li>PATCH：單純對所選取的資料做某些內容的修改、或增加內容  </li><li>OPTIONS：會回傳可以用的方法。（例如：Allow： GET，POST）有點像是一個可執行動作的查詢功能。  </li></ol><h2 id="HTTP-狀態碼"><a href="#HTTP-狀態碼" class="headerlink" title="HTTP 狀態碼"></a>HTTP 狀態碼</h2><p>常見 HTTP 狀態碼：</p><p>1XX：Server 正在做事情。<br>2XX：  </p><ul><li>204 處理了，但是不需回應，（如 DELETE）  </li></ul><p>3XX：  </p><ul><li>301 Location： XXXX  瀏覽器會記住 LOC （永久移動）  </li><li>302 （暫時移動）  </li></ul><p>4XX：  </p><ul><li>404 沒有  </li><li>418 查無  </li></ul><p>5XX：server錯誤</p><ul><li>500</li><li>503</li></ul><p><a href="https://www.google.com/teapot" target="_blank" rel="noopener">Google 418</a><br><a href="https://blog.techbridge.cc/2019/06/15/iam-a-teapot-418/" target="_blank" rel="noopener">Huli 418</a><br><a href="https://zh.wikipedia.org/wiki/HTTP%E7%8A%B6%E6%80%81%E7%A0%81" target="_blank" rel="noopener">維基百科 - HTTP 狀態碼</a>  </p><h2 id="超簡單-HTTP-Server"><a href="#超簡單-HTTP-Server" class="headerlink" title="超簡單 HTTP Server"></a>超簡單 HTTP Server</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const http &#x3D; require(&#39;http&#39;)</span><br><span class="line"></span><br><span class="line">const server &#x3D; http.createServer(function(req, res) &#123;</span><br><span class="line">  console.log(req.url)</span><br><span class="line">  res.write(&#39;hello&#39;)</span><br><span class="line">  res.end()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server.listen(5000) &#x2F;&#x2F; port</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;傳紙條&quot;&gt;&lt;a href=&quot;#傳紙條&quot; class=&quot;headerlink&quot; title=&quot;傳紙條&quot;&gt;&lt;/a&gt;傳紙條&lt;/h2&gt;&lt;h3 id=&quot;告白篇&quot;&gt;&lt;a href=&quot;#告白篇&quot; class=&quot;headerlink&quot; title=&quot;告白篇&quot;&gt;&lt;/a&gt;告白篇&lt;/h
      
    
    </summary>
    
    
      <category term="網路概論" scheme="http://JAS0NHUANG.github.io/diary/tags/%E7%B6%B2%E8%B7%AF%E6%A6%82%E8%AB%96/"/>
    
      <category term="HTTP" scheme="http://JAS0NHUANG.github.io/diary/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] 再走一次迷宮</title>
    <link href="http://JAS0NHUANG.github.io/diary/J-plus-5-mazerun-again/"/>
    <id>http://JAS0NHUANG.github.io/diary/J-plus-5-mazerun-again/</id>
    <published>2020-06-17T20:55:39.000Z</published>
    <updated>2020-06-21T22:31:48.190Z</updated>
    
    <content type="html"><![CDATA[<p>再試一次自已把走迷宮寫出來，然後一步一步記錄想法，建議沒有自已想過，或者沒有看著老師的解法仔細想過的同學先不要看。<br>然後我把所有自已測試時用到的 <code>console.log()</code> 都留下來了，當作一個思考過程的記錄</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">solve([</span><br><span class="line">  &#39;3 3&#39;, &#x2F;&#x2F; 迷宮高與寬（先高、後寬）</span><br><span class="line">  &#39;...&#39;, &#x2F;&#x2F; 迷宮圖樣</span><br><span class="line">  &#39;...&#39;,</span><br><span class="line">  &#39;...&#39;</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">function solve(lines) &#123;</span><br><span class="line">  &#x2F;&#x2F; 將高、寬轉換為數字存入陣列</span><br><span class="line">  const HWArray &#x3D; lines[0].split(&#39; &#39;)</span><br><span class="line">  &#x2F;&#x2F; console.log(HWArray)</span><br><span class="line">  &#x2F;&#x2F; 分別取出高 H、寬 W</span><br><span class="line">  const H &#x3D; Number(HWArray[0])</span><br><span class="line">  const W &#x3D; Number(HWArray[1])</span><br><span class="line">  &#x2F;&#x2F; 將迷宮存入陣列</span><br><span class="line">  const maze &#x3D; []</span><br><span class="line">  for (let i &#x3D; 1; i &lt; lines.length; i++) &#123;</span><br><span class="line">    maze.push(lines[i])</span><br><span class="line">  &#125;</span><br><span class="line">  &#x2F;&#x2F; console.log(maze)</span><br><span class="line">  &#x2F;&#x2F; 計算出終點</span><br><span class="line">  const endX &#x3D; H - 1</span><br><span class="line">  const endY &#x3D; W - 1</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; 設定一個空陣列等一下用來儲存走到每個點的步數</span><br><span class="line">  let stepsArr &#x3D; []</span><br><span class="line">  &#x2F;&#x2F; 先在這個空陣列裡面填入與高度同數量的空陣列</span><br><span class="line">  for (let i &#x3D; 1; i &lt; H + 1; i++) &#123;</span><br><span class="line">    stepsArr.push([ ])</span><br><span class="line">  &#125;</span><br><span class="line">  &#x2F;&#x2F; 設定起點（0, 0）到起點的步數為 0</span><br><span class="line">  stepsArr[0][0] &#x3D; 0</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; 設定一個列隊，用來存入可以走的點，起始設定為起點： 0, 0</span><br><span class="line">  let pointQueue &#x3D; [&#123;x:0, y:0&#125;]</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; 設定一個向四個方向走的陣列</span><br><span class="line">  const directions &#x3D; [</span><br><span class="line">    &#123; &quot;dx&quot;: 0, &quot;dy&quot;: 1&#125;,</span><br><span class="line">    &#123; &quot;dx&quot;: 1, &quot;dy&quot;: 0&#125;,</span><br><span class="line">    &#123; &quot;dx&quot;: 0, &quot;dy&quot;: -1&#125;,</span><br><span class="line">    &#123; &quot;dx&quot;: -1, &quot;dy&quot;: 0&#125;</span><br><span class="line">  ]</span><br><span class="line">  </span><br><span class="line">  &#x2F;&#x2F; 開始走迷宮</span><br><span class="line">  &#x2F;&#x2F; 只要列隊中還有未走過的點就執行以下運算</span><br><span class="line">  while (pointQueue.length) &#123;</span><br><span class="line">    &#x2F;&#x2F; 先取出目前所在的點，然後從 pointQueue 列隊中刪除</span><br><span class="line">    let currentPoint &#x3D; pointQueue.shift()</span><br><span class="line">    let x &#x3D; currentPoint.x</span><br><span class="line">    let y &#x3D; currentPoint.y</span><br><span class="line">    &#x2F;&#x2F; console.log(x, y)</span><br><span class="line">    &#x2F;&#x2F; 往四個方向走，進行判斷</span><br><span class="line">    for (let i &#x3D; 0; i &lt; directions.length; i++) &#123;</span><br><span class="line">      &#x2F;&#x2F; console.log(directions[i].dx)</span><br><span class="line">      let newX &#x3D; x + directions[i].dx</span><br><span class="line">      let newY &#x3D; y + directions[i].dy</span><br><span class="line">      &#x2F;&#x2F; 判斷條件：</span><br><span class="line">      &#x2F;&#x2F; 超過邊界或者路不能走</span><br><span class="line">      if (newX &lt; 0 || newY &lt; 0 || newX &gt; endX || newY &gt; endY || maze[newX][newY] !&#x3D;&#x3D; &#39;.&#39;) continue</span><br><span class="line">      &#x2F;&#x2F; 要走的點的步數大於原始點加上 1 步或者不是未走過的路</span><br><span class="line">      if (stepsArr[newX][newY] &lt;&#x3D; stepsArr[x][y] + 1 || stepsArr[newX][newY] !&#x3D;&#x3D; undefined) continue</span><br><span class="line">      &#x2F;&#x2F; 通過以上判斷則為要走的點。</span><br><span class="line">      &#x2F;&#x2F; 將到達原始點的步數加上 1 步，放入儲存步數的陣列中 stepsArr[newX][newY]</span><br><span class="line">      stepsArr[newX][newY] &#x3D; stepsArr[x][y] + 1</span><br><span class="line">      &#x2F;&#x2F; 將可以走的點加入列隊，等待成為之後的起始點。（列隊中可以同時有好幾個點）</span><br><span class="line">      pointQueue.push(&#123;x:newX, y:newY&#125;)</span><br><span class="line">      &#x2F;&#x2F; console.log(pointQueue)</span><br><span class="line">      &#x2F;&#x2F; console.log(&#96;newX and newY: $&#123;newX&#125; : $&#123;newY&#125;&#96;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  &#x2F;&#x2F; console.log(stepsArr)</span><br><span class="line">  console.log(stepsArr[endX][endY])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其實就是把老師的解法從自已的記憶裡挖出來然後寫出來這樣。</p><p>其中有一個地方很神奇，就是最後在判斷是否為未走過的點以及原始點（老師說的 A 點）到前往點（老師說的 B 點）的距離比較那裡。<br>我第一次不知道腦子進了什麼東西，寫出來變這樣，明顯就是錯誤（不相關）的判斷：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if (stepsArr[newX][newY] &gt; stepsArr[x][y] + stepsArr[newX][newY] || stepsArr[newX][newY] !&#x3D;&#x3D; undefined) continue</span><br></pre></td></tr></table></figure><p>但是居然 AC！<br>仔細又看了一次老師的解法，發現好像沒有去判斷 A 走到 B 點的距離也沒關係，所以就試著把那一部分刪了，變成：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if (stepsArr[newX][newY] !&#x3D;&#x3D; undefined) continue</span><br></pre></td></tr></table></figure><p>也還是 AC。XD<br>我自已的感覺是，其實只要判斷是否有走過就可以了？！或者是測資還不夠強，遇到更複雜的迷宮就可能會算錯？！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;再試一次自已把走迷宮寫出來，然後一步一步記錄想法，建議沒有自已想過，或者沒有看著老師的解法仔細想過的同學先不要看。&lt;br&gt;然後我把所有自已測試時用到的 &lt;code&gt;console.log()&lt;/code&gt; 都留下來了，當作一個思考過程的記錄&lt;/p&gt;
&lt;figure clas
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://JAS0NHUANG.github.io/diary/tags/JavaScript/"/>
    
      <category term="BFS" scheme="http://JAS0NHUANG.github.io/diary/tags/BFS/"/>
    
  </entry>
  
  <entry>
    <title>J+5 [進度] week2 超級挑戰、ES6、傳紙條</title>
    <link href="http://JAS0NHUANG.github.io/diary/J-plus-5-progress/"/>
    <id>http://JAS0NHUANG.github.io/diary/J-plus-5-progress/</id>
    <published>2020-06-17T14:27:46.000Z</published>
    <updated>2020-06-17T20:54:56.339Z</updated>
    
    <content type="html"><![CDATA[<h2 id="復習-預習"><a href="#復習-預習" class="headerlink" title="復習 + 預習"></a>復習 + 預習</h2><p>因為第二、三週程式基礎大都是在復習，雖然也不一定每一個細節都敢說是完全掌握了，但是一直復習感覺還是會比較無聊一點，所以接下來這一週應該每天都會有一半時間復習程式基礎，然後另一半的時間接著看之後的課程。</p><hr><h2 id="今日進度"><a href="#今日進度" class="headerlink" title="今日進度"></a>今日進度</h2><h3 id="重做-week2-超級挑戰題"><a href="#重做-week2-超級挑戰題" class="headerlink" title="重做 week2 超級挑戰題"></a>重做 week2 超級挑戰題</h3><ul><li><input disabled="" type="checkbox"> 重做 week2 超級挑戰題<br>試著自已再寫一次超級挑戰題。</li></ul><h3 id="看-JS102-升級你的-JavaScript-技能：ES6-npm-Jest"><a href="#看-JS102-升級你的-JavaScript-技能：ES6-npm-Jest" class="headerlink" title="看 [JS102] 升級你的 JavaScript 技能：ES6 + npm + Jest"></a>看 [JS102] 升級你的 JavaScript 技能：ES6 + npm + Jest</h3><ul><li><input checked="" disabled="" type="checkbox"> 看 [JS102] 升級你的 JavaScript 技能：ES6 + npm + Jest<br>昨天看完 npm 以及 Jest 的部分，今天看完 ES6 的部分。</li></ul><h3 id="看-NET201-傳紙條部分"><a href="#看-NET201-傳紙條部分" class="headerlink" title="看 [NET201] 傳紙條部分"></a>看 [NET201] 傳紙條部分</h3><ul><li><input disabled="" type="checkbox"> [NET201] 傳紙條部分<br>然後看老師的兩篇文章：<a href="https://medium.com/@hulitw/ramen-and-api-6238437dc544" target="_blank" rel="noopener">從拉麵店的販賣機理解什麼是 API</a>、<a href="https://medium.com/@hulitw/learning-tcp-ip-http-via-sending-letter-5d3299203660" target="_blank" rel="noopener">從傳紙條輕鬆學習基本網路概念</a><br>作筆記！</li></ul><hr><h2 id="明日進度"><a href="#明日進度" class="headerlink" title="明日進度"></a>明日進度</h2><h3 id="快速複習-ALG101-先別急著寫-leetcode-單元-5"><a href="#快速複習-ALG101-先別急著寫-leetcode-單元-5" class="headerlink" title="快速複習 [ALG101] 先別急著寫 leetcode 單元 5"></a>快速複習 [ALG101] 先別急著寫 leetcode 單元 5</h3><ul><li><input disabled="" type="checkbox"> [ALG101] 先別急著寫 leetcode 單元 5</li></ul><h3 id="看-NET201-HTTP-協定"><a href="#看-NET201-HTTP-協定" class="headerlink" title="看 [NET201] HTTP 協定"></a>看 [NET201] HTTP 協定</h3><ul><li><input disabled="" type="checkbox"> [NET201] HTTP 協定</li></ul><hr><h2 id="後天與未來計畫"><a href="#後天與未來計畫" class="headerlink" title="後天與未來計畫"></a>後天與未來計畫</h2><h3 id="快速複習-ALG101-先別急著寫-leetcode-單元-6"><a href="#快速複習-ALG101-先別急著寫-leetcode-單元-6" class="headerlink" title="快速複習 [ALG101] 先別急著寫 leetcode 單元 6"></a>快速複習 [ALG101] 先別急著寫 leetcode 單元 6</h3><ul><li><input disabled="" type="checkbox"> [ALG101] 先別急著寫 leetcode 單元 6<br>把 [ALG101] 單元 5、6 分兩天看，以免有倦怠感……</li></ul><h3 id="看-NET201-TCP-IP"><a href="#看-NET201-TCP-IP" class="headerlink" title="看 [NET201] TCP/IP"></a>看 [NET201] TCP/IP</h3><ul><li><input disabled="" type="checkbox"> [NET201] TCP/IP</li></ul><h3 id="將-JS101-練習-Lv2-與-Lv3-做完"><a href="#將-JS101-練習-Lv2-與-Lv3-做完" class="headerlink" title="將 [JS101] 練習 Lv2 與 Lv3 做完"></a>將 [JS101] 練習 Lv2 與 Lv3 做完</h3><ul><li><input disabled="" type="checkbox"> [JS101] 練習 Lv2 與 Lv3 做完<br>很多都跟作業、[ALG101] 的內容重覆了，大概看一下講解影片看看有沒有什麼我沒有想到的地方。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;復習-預習&quot;&gt;&lt;a href=&quot;#復習-預習&quot; class=&quot;headerlink&quot; title=&quot;復習 + 預習&quot;&gt;&lt;/a&gt;復習 + 預習&lt;/h2&gt;&lt;p&gt;因為第二、三週程式基礎大都是在復習，雖然也不一定每一個細節都敢說是完全掌握了，但是一直復習感覺還是會比較無聊
      
    
    </summary>
    
    
      <category term="每日進度" scheme="http://JAS0NHUANG.github.io/diary/tags/%E6%AF%8F%E6%97%A5%E9%80%B2%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] Jest 測試入門</title>
    <link href="http://JAS0NHUANG.github.io/diary/J-plus-4-note-jest/"/>
    <id>http://JAS0NHUANG.github.io/diary/J-plus-4-note-jest/</id>
    <published>2020-06-17T14:19:03.000Z</published>
    <updated>2020-06-21T22:31:30.170Z</updated>
    
    <content type="html"><![CDATA[<h2 id="土炮測試"><a href="#土炮測試" class="headerlink" title="土炮測試"></a>土炮測試</h2><p>log 爆了你！  </p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">console.log(theFunction())</span><br><span class="line">console.log(theFunction() &#x3D;&#x3D;&#x3D; &#39;XXXX&#39;)</span><br></pre></td></tr></table></figure><p>缺點就是沒辦法規模化、不好執行。</p><h2 id="Jest-大神幫你測"><a href="#Jest-大神幫你測" class="headerlink" title="Jest 大神幫你測"></a>Jest 大神幫你測</h2><p><a href="https://jestjs.io/" target="_blank" rel="noopener">JEST</a></p><ul><li>安裝 <code>yarn add --dev jest</code>。</li><li>基本使用方法：<ol><li>先把想要測試的程式 <code>export</code> 出來：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 想被測的程式.js</span><br><span class="line">function 兩倍(x)&#123;</span><br><span class="line">  return x * 2</span><br><span class="line">&#125;</span><br><span class="line">module.exports &#x3D; 兩倍</span><br></pre></td></tr></table></figure></li><li>建立一個測試檔，引入想測試的程式：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 測試.test.js</span><br><span class="line">var 兩倍 &#x3D; require(&#39;.&#x2F;想被測的程式&#39;)</span><br></pre></td></tr></table></figure></li><li>然後寫測試：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">test(&#39;這裡你想打什麼就打什麼，例如：&quot;5 的兩倍是 10&quot;&#39;， function () &#123;</span><br><span class="line">  &#x2F;&#x2F; 測試資料與預期結果</span><br><span class="line">  expect(兩倍(5)).toBe(10)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li>然後跑起來！  <ol><li><code>./node_modules/jest/bin/jest.js</code>。</li><li>在 package.json 檔案裡加一個 script：<code>&quot;test&quot;:&quot;jest&quot;</code>，然後 <code>npm run test</code>。</li><li>如果 npm 版本夠新，也可以用 <code>npx jest</code>。<br>Jest 會自已去找所有 .test.js 的檔案來進行測試。當然也可以指定單一檔案測試。</li></ol></li></ol></li></ul><ul><li>加一個 describe 包住其它測試資料, 可以讓同一個函式的所有測試被放到同一個群組裡<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">describe(&#39;測試 兩倍&#39;, function() &#123;</span><br><span class="line">  test(&#39;這裡你想打什麼就打什麼&#39;， function () &#123;</span><br><span class="line">    &#x2F;&#x2F; 測試資料與預期結果</span><br><span class="line">    expect(兩倍(5)).toBe(10)</span><br><span class="line">  &#125;)</span><br><span class="line">  test(&#39;這裡你想打什麼就打什麼&#39;， function () &#123;</span><br><span class="line">    &#x2F;&#x2F; 測試資料與預期結果</span><br><span class="line">    expect(兩倍(9)).toBe(18)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="TDD-測試驅動開發"><a href="#TDD-測試驅動開發" class="headerlink" title="TDD 測試驅動開發"></a>TDD 測試驅動開發</h2>先寫測試再寫程式。<br>其實就是把一般先寫程式再測試的方法倒過來，之後寫新的 project 的時候可以試試看。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;土炮測試&quot;&gt;&lt;a href=&quot;#土炮測試&quot; class=&quot;headerlink&quot; title=&quot;土炮測試&quot;&gt;&lt;/a&gt;土炮測試&lt;/h2&gt;&lt;p&gt;log 爆了你！  &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td 
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://JAS0NHUANG.github.io/diary/tags/JavaScript/"/>
    
      <category term="Jest" scheme="http://JAS0NHUANG.github.io/diary/tags/Jest/"/>
    
      <category term="Test" scheme="http://JAS0NHUANG.github.io/diary/tags/Test/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] 模組、套件與 npm</title>
    <link href="http://JAS0NHUANG.github.io/diary/J-plus-4-note-package/"/>
    <id>http://JAS0NHUANG.github.io/diary/J-plus-4-note-package/</id>
    <published>2020-06-16T14:55:05.000Z</published>
    <updated>2020-06-21T22:31:37.298Z</updated>
    
    <content type="html"><![CDATA[<h2 id="模組化"><a href="#模組化" class="headerlink" title="模組化"></a>模組化</h2><ul><li>require 用別人的模組<br>將不同功能切開，分別寫在不同檔案裡。<br>列如 node 就有提供很多寫好的模組，如：os、readline、fs、https……等等。<br>引入方法，使用 <code>require</code> 關鍵字：  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var os &#x3D; require(&#39;os&#39;) &#x2F;&#x2F; 引入模組並存入 os 這個變數中</span><br><span class="line">console.log(os.platform())</span><br></pre></td></tr></table></figure></li><li>exports 建立自已的模組<br>建立自已的模組讓別人/或自已可以使用，使用 <code>module.exports</code> 關鍵字  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 檔名為 abcde</span><br><span class="line">function abc(x) &#123;</span><br><span class="line">  return x</span><br><span class="line">&#125;</span><br><span class="line">module.exports &#x3D; abc</span><br></pre></td></tr></table></figure>然後想要在同一個資料夾裡的另一個程式裡使用的話一樣是用 require，但是引入的必需是檔案名稱，而不是函數名稱：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var abc &#x3D; require(&#39;.&#x2F;abcde&#39;)</span><br><span class="line">console.log(abc(&#39;hello&#39;))</span><br></pre></td></tr></table></figure></li><li>輸出多個模組<br>同一個檔案可以輸出多個模組，但是必需以單一物件 export（不然只會輸出最後一個模組），例如：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 檔名為 utils.js</span><br><span class="line">function double (x) &#123;</span><br><span class="line">  return x * 2</span><br><span class="line">&#125;</span><br><span class="line">function triple (y) &#123;</span><br><span class="line">  return y * 3</span><br><span class="line">&#125;</span><br><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">  double: double,</span><br><span class="line">  triple: triple</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul><p>或者也可以寫成：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; exports 初始會被視為空物件</span><br><span class="line">exports.double &#x3D; double</span><br><span class="line">exports triple &#x3D; triple</span><br></pre></td></tr></table></figure><p>引入時可以作為方法使用：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var utils &#x3D; require(&#39;.&#x2F;utils&#39;）</span><br><span class="line">utils.double(22)</span><br><span class="line">utils.triple(33)</span><br></pre></td></tr></table></figure><h2 id="npm-大神們寫的模組-套件"><a href="#npm-大神們寫的模組-套件" class="headerlink" title="npm 大神們寫的模組/套件"></a>npm 大神們寫的模組/套件</h2><p>library、package、module 三個相近的概念，有時候其實指的也是同一個東西。</p><ol><li>拿 left-pad 來試試<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install left-pad</span><br></pre></td></tr></table></figure>安裝 left-pad（其實就是在同一個資料夾建立一個 <code>node_modules/</code> 資料夾，然後從 npm 的程式庫裡把 <code>left-pad</code> 這個套件抓下來，放到 <code>node_modules/</code> 資料夾內）<br>然後就可以 <code>var LP = require(&#39;left-pad&#39;)</code> 使用它了。</li></ol><ul><li>如果還沒有執行過，<code>npm init</code> 的話，因為資料夾內還沒有 <code>package.json</code> 檔案，所以這時候安裝的套件都不會被記錄到相依性裡頭。</li><li>但是只要一執行 <code>npm init</code>（不論是安裝套件之前還是之後），npm 預設都會把安裝的套件記錄到相依性裡（–save）。<br>這個相依關係有一個很實用的地方就是大家在分享自已的專案時不用分享 <code>node_modules</code> 資料夾內的套件，只要有 <code>package.json</code> 檔，在任何電腦上執行 <code>npm install</code> npm 就會自動把相依的套件都抓下來了。</li><li><code>--save</code> 選項是記錄到相依套件，<code>--save-dev</code> 則會記錄到「開發環境」的相依關係裡。<br>（看 <code>left-pad</code> 事件看了一個多小時，網路真的很恐怖，連出去就抓不回來了……）</li></ul><ol start="2"><li><p>npm scripts<br>在 <code>package.json</code> 檔案裡可以看到：<code>&quot;scripts&quot;:{}</code> 這個區塊，就是讓你寫 scripts 的地方啦！<br>這個 json 物件裡的 key 就是你想要在這個 node 專案裡設定的一個指令，value 就是下了這個指令後會執行的步驟。例如：設定 <code>&quot;start&quot;: &quot;node index.js&quot;</code> 那麼在這個專案資料夾裡執行 <code>npm run start</code>（必需要加 <code>npm run</code> 在指令之前）的時候，npm 就會自動執行 <code>node index.js</code> 這個指令。</p></li><li><p>還有 yarn<br>其實就是另一個管理套件的程式，跟 npm 不止 87 分像，基本指令對照 npm：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yarn -v &#x3D;&#x3D; npm -v</span><br><span class="line">yarn &#x3D;&#x3D; npm install</span><br><span class="line">yarn add PACKAGE &#x3D;&#x3D; npm install PACKAGE</span><br><span class="line">yarn add --dev PACKAGE &#x3D;&#x3D; npm install --save-dev PACKAGE</span><br><span class="line">yarn run start &#x3D;&#x3D; npm run start</span><br></pre></td></tr></table></figure><p><a href="https://classic.yarnpkg.com/es-ES/docs/migrating-from-npm" target="_blank" rel="noopener">這裡</a>可以看完整對照表</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;模組化&quot;&gt;&lt;a href=&quot;#模組化&quot; class=&quot;headerlink&quot; title=&quot;模組化&quot;&gt;&lt;/a&gt;模組化&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;require 用別人的模組&lt;br&gt;將不同功能切開，分別寫在不同檔案裡。&lt;br&gt;列如 node 就有提供很多寫好的模組，
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://JAS0NHUANG.github.io/diary/tags/JavaScript/"/>
    
      <category term="npm" scheme="http://JAS0NHUANG.github.io/diary/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>J+4 [進度] 寫題目 &amp; 學 ES6/npm/Jest</title>
    <link href="http://JAS0NHUANG.github.io/diary/J-plus-4-progress/"/>
    <id>http://JAS0NHUANG.github.io/diary/J-plus-4-progress/</id>
    <published>2020-06-16T14:54:50.000Z</published>
    <updated>2020-06-17T12:29:16.497Z</updated>
    
    <content type="html"><![CDATA[<h2 id="昨日小記"><a href="#昨日小記" class="headerlink" title="昨日小記"></a>昨日小記</h2><h3 id="重看-ALG101"><a href="#重看-ALG101" class="headerlink" title="重看 [ALG101]"></a>重看 [ALG101]</h3><p>昨天快速的重看了 [ALG101] 到單元四，重做了一些比較複雜的題目（如：印出聖誕樹、水仙花數……），因為第一次跟完 [ALG101] 的時候，有些自已亂寫的解法在 LIOJ 上面也能 AC 所以就沒有特別仔細的看老師的解法，這一次找出幾個比較複雜的仔細照老師的解法寫一次。  </p><h3 id="大O"><a href="#大O" class="headerlink" title="大O"></a>大O</h3><p>看完了 [CS101] 火球術的第七單元，對提到的排序法也有些概念了，但是那個「大O」還是一直搞不懂，怎麼算的也不清楚，這應該真的就是數學不好的問題了……O(1)、O(n) 還勉強可以知道怎麼來的，但是一看到那些 log n、(log n)c、(n!) 就真的不知道是怎麼推算出來的了，腦子大概有自動防護功能，避免它們進來搞亂我脆弱的腦子。  </p><h2 id="今日進度"><a href="#今日進度" class="headerlink" title="今日進度"></a>今日進度</h2><h3 id="檢查-week2-作業"><a href="#檢查-week2-作業" class="headerlink" title="檢查 week2 作業"></a>檢查 week2 作業</h3><ul><li><input disabled="" type="checkbox"> 檢查 week2 作業<br>確定 hw1 到 hw6 以及挑戰題沒有問題，補上想補充的，然後明天再寫一次超級挑戰題，後天應該就可以交 week2 的作業了。  </li></ul><h3 id="看-JS102-升級你的-JavaScript-技能：ES6-npm-Jest"><a href="#看-JS102-升級你的-JavaScript-技能：ES6-npm-Jest" class="headerlink" title="看 [JS102] 升級你的 JavaScript 技能：ES6 + npm + Jest"></a>看 [JS102] 升級你的 JavaScript 技能：ES6 + npm + Jest</h3><ul><li><input disabled="" type="checkbox"> 看 [JS102] 升級你的 JavaScript 技能：ES6 + npm + Jest  </li></ul><h2 id="明日進度"><a href="#明日進度" class="headerlink" title="明日進度"></a>明日進度</h2><h3 id="快速複習-ALG101-先別急著寫-leetcode-到單元六"><a href="#快速複習-ALG101-先別急著寫-leetcode-到單元六" class="headerlink" title="快速複習 [ALG101] 先別急著寫 leetcode 到單元六"></a>快速複習 [ALG101] 先別急著寫 leetcode 到單元六</h3><ul><li><input disabled="" type="checkbox"> [ALG101] 先別急著寫 leetcode 到單元六<br>一樣快速複習一遍看過的內容，把比較複雜的題目再寫一遍，雖然說是「快速」但是內容比較難一點點，題目也比較多，我解題速度也還很慢，所以大概也快不起來……  </li></ul><h3 id="將-JS101-練習-Lv2-與-Lv3-做完"><a href="#將-JS101-練習-Lv2-與-Lv3-做完" class="headerlink" title="將 [JS101] 練習 Lv2 與 Lv3 做完"></a>將 [JS101] 練習 Lv2 與 Lv3 做完</h3><ul><li><input disabled="" type="checkbox"> [JS101] 練習 Lv2 與 Lv3 做完<br>很多都跟作業、[ALG101] 的內容重覆了，應該只會大概看一下講解影片看看有沒有什麼我沒有想到的地方。<br>（看了一下課綱，發現這算是補充內容，所以排到其它主要內容後面完成。）  </li></ul><p>偷偷看了一下第四、第六、七週的內容……厚厚，真正的挑戰還沒開始呢！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;昨日小記&quot;&gt;&lt;a href=&quot;#昨日小記&quot; class=&quot;headerlink&quot; title=&quot;昨日小記&quot;&gt;&lt;/a&gt;昨日小記&lt;/h2&gt;&lt;h3 id=&quot;重看-ALG101&quot;&gt;&lt;a href=&quot;#重看-ALG101&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
    
      <category term="每日進度" scheme="http://JAS0NHUANG.github.io/diary/tags/%E6%AF%8F%E6%97%A5%E9%80%B2%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>J+3 [進度] [ALG101] 複習</title>
    <link href="http://JAS0NHUANG.github.io/diary/J-plus-3-progress/"/>
    <id>http://JAS0NHUANG.github.io/diary/J-plus-3-progress/</id>
    <published>2020-06-15T20:31:07.000Z</published>
    <updated>2020-06-15T20:31:07.361Z</updated>
    
    <content type="html"><![CDATA[<h2 id="昨日小記"><a href="#昨日小記" class="headerlink" title="昨日小記"></a>昨日小記</h2><h3 id="完成-week2-超級挑戰題"><a href="#完成-week2-超級挑戰題" class="headerlink" title="完成 week2 超級挑戰題"></a>完成 week2 超級挑戰題</h3><p>自已真的想不出來，雖然大概理解 BFS 就是將所有可能的點都走過（實際上網路上那些 BFS 相關的文章還是看的一知半解，大概程度確實還不到那邊吧！），但是轉換成程式碼還是沒那麼容易。<br>所以就決定先把老師的解法一步一步的看懂，然後再試著自已默寫一遍，在看老師程式碼的時候，x 軸、y 軸的狀態因為到後面出現 <code>ans[y][x]</code> 還有 <code>and[newY][newX]</code> 所以有一點點被搞混了，大概理解老師是要保持一般 x 軸為水平、y 軸為垂直的慣例才會這樣寫，但是我自已是覺得，直接在 <code>endX</code>、<code>endY</code> 設定的時候就使用 <code>endX = h - 1</code>、<code>endY = w - 1</code>，會比較直覺、比較好懂一點點（因為後面就不會出現有 x y 反過來寫的狀況了。）<br>自已默寫的時候還是會出錯，有些語法、內建函式的應用還不是很熟練。<br>三天後再來試試看自已還記不記得住解法。  </p><h3 id="研究-reduce-的用法"><a href="#研究-reduce-的用法" class="headerlink" title="研究 .reduce() 的用法"></a>研究 <code>.reduce()</code> 的用法</h3><p>花了大概兩個小時找資料，再看一遍老師的影片，然後把 <code>.reduce()</code> 的用法搞懂，寫了一篇筆記（<a href="https://jas0nhuang.github.io/diary/2020/06/14/J-plus-2-note-reduce/">J+2 [筆記] 淺淺的看一下 reduce</a>），歡迎大家指教。</p><h2 id="今日進度"><a href="#今日進度" class="headerlink" title="今日進度"></a>今日進度</h2><h3 id="快速的再看一遍-ALG101-到單元四"><a href="#快速的再看一遍-ALG101-到單元四" class="headerlink" title="快速的再看一遍  [ALG101] 到單元四"></a>快速的再看一遍  [ALG101] 到單元四</h3><ul><li><input disabled="" type="checkbox"> 快速的再看一遍  [ALG101] 到單元四<br>之前很仔細的上完了這堂課，程式概念慢慢有點內化的感覺，再瀏覽一次加深印象。<br>因為到單元六內容還不少，雖然之前都看過了，把影片再過一次還是要花不少時間，今天進度就先暫訂這樣就好。也讓自已腦子可以再消化一下超級挑戰題的解法。</li></ul><h3 id="整理、修正-week1-作業"><a href="#整理、修正-week1-作業" class="headerlink" title="整理、修正 week1 作業"></a>整理、修正 week1 作業</h3><ul><li><input checked="" disabled="" type="checkbox"> 整理、修正 week 作業<br>把 week1 作業裡面要修正，想要重新整理的地方改好，重新發 PR 自已 merge。</li></ul><h2 id="明日進度"><a href="#明日進度" class="headerlink" title="明日進度"></a>明日進度</h2><h3 id="看-CS101-初心者的計概與-coding-火球術-unit-7"><a href="#看-CS101-初心者的計概與-coding-火球術-unit-7" class="headerlink" title="看 [CS101] 初心者的計概與 coding 火球術 unit 7"></a>看 [CS101] 初心者的計概與 coding 火球術 unit 7</h3><ul><li><input disabled="" type="checkbox"> [CS101] 初心者的計概與 coding 火球術 unit 7</li></ul><h3 id="將-JS101-練習-Lv2-與-Lv3-做完"><a href="#將-JS101-練習-Lv2-與-Lv3-做完" class="headerlink" title="將 [JS101] 練習 Lv2 與 Lv3 做完"></a>將 [JS101] 練習 Lv2 與 Lv3 做完</h3><ul><li><input disabled="" type="checkbox"> [JS101] 練習 Lv2 與 Lv3 做完<br>很多都跟作業、[ALG101] 的內容重覆了，應該只會大概看一下講解影片看看有沒有什麼我沒有想到的地方。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;昨日小記&quot;&gt;&lt;a href=&quot;#昨日小記&quot; class=&quot;headerlink&quot; title=&quot;昨日小記&quot;&gt;&lt;/a&gt;昨日小記&lt;/h2&gt;&lt;h3 id=&quot;完成-week2-超級挑戰題&quot;&gt;&lt;a href=&quot;#完成-week2-超級挑戰題&quot; class=&quot;headerli
      
    
    </summary>
    
    
      <category term="每日進度" scheme="http://JAS0NHUANG.github.io/diary/tags/%E6%AF%8F%E6%97%A5%E9%80%B2%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>[筆記] [ALG101] 與 [CS101] unit 7 雜記</title>
    <link href="http://JAS0NHUANG.github.io/diary/J-plus-3-note/"/>
    <id>http://JAS0NHUANG.github.io/diary/J-plus-3-note/</id>
    <published>2020-06-15T10:23:36.000Z</published>
    <updated>2020-06-21T22:31:09.999Z</updated>
    
    <content type="html"><![CDATA[<p>快速記下一些重看 [ALG101] 的小細節</p><h2 id="ALG101-雜記"><a href="#ALG101-雜記" class="headerlink" title="[ALG101] 雜記"></a>[ALG101] 雜記</h2><h3 id="log-小技巧"><a href="#log-小技巧" class="headerlink" title="log 小技巧"></a>log 小技巧</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">let arr &#x3D; [2, 7, 5]</span><br><span class="line">console.log(JSON.stringify(arr)) &#x2F;&#x2F; &#39;[2, 7, 5]&#39;，將 arr 轉換為字串印出，避免在 dev tool 裡的輸出被後面的變動影響 </span><br><span class="line">arr.push(3)</span><br><span class="line">console.log(arr) &#x2F;&#x2F; [2, 7, 5, 3]</span><br></pre></td></tr></table></figure><h3 id="fizz-Buzz-解法研究"><a href="#fizz-Buzz-解法研究" class="headerlink" title="fizz Buzz 解法研究"></a>fizz Buzz 解法研究</h3><p><a href="https://leetcode.com/articles/fizz-buzz/#" target="_blank" rel="noopener">LeetCode - Fizz Buzz</a></p><h3 id="大小寫轉換"><a href="#大小寫轉換" class="headerlink" title="大小寫轉換"></a>大小寫轉換</h3><p>有三種解法：</p><ol><li>ASCII code</li><li>比較字典序。例：z &gt; b，k &gt; g……</li><li>內建 <code>.toUpperCase()</code> 或 <code>.toLowerCase()</code></li></ol><h3 id="幾個水桶"><a href="#幾個水桶" class="headerlink" title="幾個水桶"></a>幾個水桶</h3><p>翻成數學問題就是：將一個 10 進位的數字轉換為 2 進位，並輸出此二進位數字包含幾個 1<br>有上過課馬上就能聯想到這個解法，我第一次解的時候是用題目給的上限值開始往下取，先找到最大的 2 的 x 次方數，減去後再繼續往下取。</p><h3 id="大數字如何處理"><a href="#大數字如何處理" class="headerlink" title="大數字如何處理"></a>大數字如何處理</h3><p>如何處理超過 MAX_SAFE_INTEGER 的數字？MDN 就有說了：</p><blockquote><p>For larger integers, consider using BigInt.</p></blockquote><h3 id="印出金字塔-印出聖誕樹"><a href="#印出金字塔-印出聖誕樹" class="headerlink" title="印出金字塔/印出聖誕樹"></a>印出金字塔/印出聖誕樹</h3><p>還是花了快一個小時才解出來，放到 LIOJ 上還是 AC，但是寫出來的 Code 比第一次在 LIOJ 上面解出來的還要噁心……</p><h3 id="印出平方數"><a href="#印出平方數" class="headerlink" title="印出平方數"></a>印出平方數</h3><p>兩種解法：</p><ol><li>檢查每一個數字被開根號後是否為整數。</li><li>從 1 開始計算每個數的平方，一直到大於所求範圍結束。</li></ol><h2 id="CS101-火球術-unit-7-雜記"><a href="#CS101-火球術-unit-7-雜記" class="headerlink" title="[CS101] 火球術 unit 7 雜記"></a>[CS101] 火球術 unit 7 雜記</h2><h2 id="排序法"><a href="#排序法" class="headerlink" title="排序法"></a>排序法</h2><p><a href="https://visualgo.net/en" target="_blank" rel="noopener">VISUALGO</a></p><h3 id="select"><a href="#select" class="headerlink" title="select"></a>select</h3><p>遍歷陣列，找到最小與第一位交換，再找第二小與第二位交換、第三小與第三位交換……類推</p><h3 id="bubble"><a href="#bubble" class="headerlink" title="bubble"></a>bubble</h3><p>兩兩比較，較大放右邊，較小放左邊</p><h3 id="insertion"><a href="#insertion" class="headerlink" title="insertion"></a>insertion</h3><p>將前兩位先按順序放好，第三位起與前面數字比大小，大於第二位則放至第三位，大於第一位、小於第二位則放至第二位，小於第一位則放至第一位。第四位與前面數字比大小，大於第三位則放至第四位，大於第二位小於第三位則放至第三位……類推</p><h3 id="merge"><a href="#merge" class="headerlink" title="merge"></a>merge</h3><p>切半、切半、再切半！合併、合併、再合併！</p><h3 id="quick"><a href="#quick" class="headerlink" title="quick"></a>quick</h3><p>先將第一個數字設定為基準點（piviot），尋找比它小的數字，第一個找到的調換到它旁邊，第二個找到的調換到第一個的旁邊……類推。一直到找不到比較小的數字後，將第一個數字與最後一個找到的數字對調。<br>持續進行這個動作，直到每個數字歸位。</p><p>用文字敘述實在很不容易想像，還是上 VISUALGO 看動畫吧！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;快速記下一些重看 [ALG101] 的小細節&lt;/p&gt;
&lt;h2 id=&quot;ALG101-雜記&quot;&gt;&lt;a href=&quot;#ALG101-雜記&quot; class=&quot;headerlink&quot; title=&quot;[ALG101] 雜記&quot;&gt;&lt;/a&gt;[ALG101] 雜記&lt;/h2&gt;&lt;h3 id=&quot;log
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://JAS0NHUANG.github.io/diary/tags/JavaScript/"/>
    
  </entry>
  
</feed>
